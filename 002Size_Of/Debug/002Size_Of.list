
002Size_Of.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011a4  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  08001334  08001334  00011334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001428  08001428  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001428  08001428  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001428  08001428  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001428  08001428  00011428  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800142c  0800142c  0001142c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001430  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020086  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000930  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000030b  00000000  00000000  000209f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  00020d08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000be  00000000  00000000  00020e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002b18  00000000  00000000  00020ede  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001422  00000000  00000000  000239f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00009777  00000000  00000000  00024e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000b0c  00000000  00000000  0002e590  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007a  00000000  00000000  0002f09c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800131c 	.word	0x0800131c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	0800131c 	.word	0x0800131c

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
 ******************************************************************************
 */

#include <stdio.h>
int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	b084      	sub	sp, #16
 8000274:	af00      	add	r7, sp, #0
	long long datalong = 900;
 8000276:	f44f 7261 	mov.w	r2, #900	; 0x384
 800027a:	f04f 0300 	mov.w	r3, #0
 800027e:	e9c7 2302 	strd	r2, r3, [r7, #8]
	char size = sizeof(datalong);
 8000282:	2308      	movs	r3, #8
 8000284:	71fb      	strb	r3, [r7, #7]
	printf("Size of char data type = %d\n",sizeof(char));
 8000286:	2101      	movs	r1, #1
 8000288:	480e      	ldr	r0, [pc, #56]	; (80002c4 <main+0x54>)
 800028a:	f000 f9d9 	bl	8000640 <iprintf>
	printf("Size of short data type = %d\n",sizeof(short));
 800028e:	2102      	movs	r1, #2
 8000290:	480d      	ldr	r0, [pc, #52]	; (80002c8 <main+0x58>)
 8000292:	f000 f9d5 	bl	8000640 <iprintf>
	printf("Size of int data type = %d\n",sizeof(int));
 8000296:	2104      	movs	r1, #4
 8000298:	480c      	ldr	r0, [pc, #48]	; (80002cc <main+0x5c>)
 800029a:	f000 f9d1 	bl	8000640 <iprintf>
	printf("Size of long data type = %d\n",sizeof(long));
 800029e:	2104      	movs	r1, #4
 80002a0:	480b      	ldr	r0, [pc, #44]	; (80002d0 <main+0x60>)
 80002a2:	f000 f9cd 	bl	8000640 <iprintf>
	printf("Size of long long data type = %d\n",sizeof(long long));
 80002a6:	2108      	movs	r1, #8
 80002a8:	480a      	ldr	r0, [pc, #40]	; (80002d4 <main+0x64>)
 80002aa:	f000 f9c9 	bl	8000640 <iprintf>
	printf("Size of datalong data type = %d\n",sizeof(datalong));
 80002ae:	2108      	movs	r1, #8
 80002b0:	4809      	ldr	r0, [pc, #36]	; (80002d8 <main+0x68>)
 80002b2:	f000 f9c5 	bl	8000640 <iprintf>
	printf("Size of char data type = %d\n",size);
 80002b6:	79fb      	ldrb	r3, [r7, #7]
 80002b8:	4619      	mov	r1, r3
 80002ba:	4802      	ldr	r0, [pc, #8]	; (80002c4 <main+0x54>)
 80002bc:	f000 f9c0 	bl	8000640 <iprintf>
	for(;;);
 80002c0:	e7fe      	b.n	80002c0 <main+0x50>
 80002c2:	bf00      	nop
 80002c4:	08001334 	.word	0x08001334
 80002c8:	08001354 	.word	0x08001354
 80002cc:	08001374 	.word	0x08001374
 80002d0:	08001390 	.word	0x08001390
 80002d4:	080013b0 	.word	0x080013b0
 80002d8:	080013d4 	.word	0x080013d4

080002dc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002dc:	b480      	push	{r7}
 80002de:	b083      	sub	sp, #12
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	4603      	mov	r3, r0
 80002e4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002e6:	4b0e      	ldr	r3, [pc, #56]	; (8000320 <ITM_SendChar+0x44>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	4a0d      	ldr	r2, [pc, #52]	; (8000320 <ITM_SendChar+0x44>)
 80002ec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002f0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002f2:	4b0c      	ldr	r3, [pc, #48]	; (8000324 <ITM_SendChar+0x48>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	4a0b      	ldr	r2, [pc, #44]	; (8000324 <ITM_SendChar+0x48>)
 80002f8:	f043 0301 	orr.w	r3, r3, #1
 80002fc:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002fe:	bf00      	nop
 8000300:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	f003 0301 	and.w	r3, r3, #1
 800030a:	2b00      	cmp	r3, #0
 800030c:	d0f8      	beq.n	8000300 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800030e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000312:	79fb      	ldrb	r3, [r7, #7]
 8000314:	6013      	str	r3, [r2, #0]
}
 8000316:	bf00      	nop
 8000318:	370c      	adds	r7, #12
 800031a:	46bd      	mov	sp, r7
 800031c:	bc80      	pop	{r7}
 800031e:	4770      	bx	lr
 8000320:	e000edfc 	.word	0xe000edfc
 8000324:	e0000e00 	.word	0xe0000e00

08000328 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b086      	sub	sp, #24
 800032c:	af00      	add	r7, sp, #0
 800032e:	60f8      	str	r0, [r7, #12]
 8000330:	60b9      	str	r1, [r7, #8]
 8000332:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000334:	2300      	movs	r3, #0
 8000336:	617b      	str	r3, [r7, #20]
 8000338:	e00a      	b.n	8000350 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800033a:	f3af 8000 	nop.w
 800033e:	4601      	mov	r1, r0
 8000340:	68bb      	ldr	r3, [r7, #8]
 8000342:	1c5a      	adds	r2, r3, #1
 8000344:	60ba      	str	r2, [r7, #8]
 8000346:	b2ca      	uxtb	r2, r1
 8000348:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf0      	blt.n	800033a <_read+0x12>
  }

  return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000362:	b580      	push	{r7, lr}
 8000364:	b086      	sub	sp, #24
 8000366:	af00      	add	r7, sp, #0
 8000368:	60f8      	str	r0, [r7, #12]
 800036a:	60b9      	str	r1, [r7, #8]
 800036c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036e:	2300      	movs	r3, #0
 8000370:	617b      	str	r3, [r7, #20]
 8000372:	e009      	b.n	8000388 <_write+0x26>
  {
   // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000374:	68bb      	ldr	r3, [r7, #8]
 8000376:	1c5a      	adds	r2, r3, #1
 8000378:	60ba      	str	r2, [r7, #8]
 800037a:	781b      	ldrb	r3, [r3, #0]
 800037c:	4618      	mov	r0, r3
 800037e:	f7ff ffad 	bl	80002dc <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	697b      	ldr	r3, [r7, #20]
 8000384:	3301      	adds	r3, #1
 8000386:	617b      	str	r3, [r7, #20]
 8000388:	697a      	ldr	r2, [r7, #20]
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	429a      	cmp	r2, r3
 800038e:	dbf1      	blt.n	8000374 <_write+0x12>
  }
  return len;
 8000390:	687b      	ldr	r3, [r7, #4]
}
 8000392:	4618      	mov	r0, r3
 8000394:	3718      	adds	r7, #24
 8000396:	46bd      	mov	sp, r7
 8000398:	bd80      	pop	{r7, pc}

0800039a <_close>:

int _close(int file)
{
 800039a:	b480      	push	{r7}
 800039c:	b083      	sub	sp, #12
 800039e:	af00      	add	r7, sp, #0
 80003a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003a2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bc80      	pop	{r7}
 80003ae:	4770      	bx	lr

080003b0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b083      	sub	sp, #12
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
 80003b8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003ba:	683b      	ldr	r3, [r7, #0]
 80003bc:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003c0:	605a      	str	r2, [r3, #4]
  return 0;
 80003c2:	2300      	movs	r3, #0
}
 80003c4:	4618      	mov	r0, r3
 80003c6:	370c      	adds	r7, #12
 80003c8:	46bd      	mov	sp, r7
 80003ca:	bc80      	pop	{r7}
 80003cc:	4770      	bx	lr

080003ce <_isatty>:

int _isatty(int file)
{
 80003ce:	b480      	push	{r7}
 80003d0:	b083      	sub	sp, #12
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003d6:	2301      	movs	r3, #1
}
 80003d8:	4618      	mov	r0, r3
 80003da:	370c      	adds	r7, #12
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr

080003e2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003e2:	b480      	push	{r7}
 80003e4:	b085      	sub	sp, #20
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	60f8      	str	r0, [r7, #12]
 80003ea:	60b9      	str	r1, [r7, #8]
 80003ec:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003ee:	2300      	movs	r3, #0
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	3714      	adds	r7, #20
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bc80      	pop	{r7}
 80003f8:	4770      	bx	lr
	...

080003fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b086      	sub	sp, #24
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000404:	4a14      	ldr	r2, [pc, #80]	; (8000458 <_sbrk+0x5c>)
 8000406:	4b15      	ldr	r3, [pc, #84]	; (800045c <_sbrk+0x60>)
 8000408:	1ad3      	subs	r3, r2, r3
 800040a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800040c:	697b      	ldr	r3, [r7, #20]
 800040e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000410:	4b13      	ldr	r3, [pc, #76]	; (8000460 <_sbrk+0x64>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	2b00      	cmp	r3, #0
 8000416:	d102      	bne.n	800041e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000418:	4b11      	ldr	r3, [pc, #68]	; (8000460 <_sbrk+0x64>)
 800041a:	4a12      	ldr	r2, [pc, #72]	; (8000464 <_sbrk+0x68>)
 800041c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041e:	4b10      	ldr	r3, [pc, #64]	; (8000460 <_sbrk+0x64>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4413      	add	r3, r2
 8000426:	693a      	ldr	r2, [r7, #16]
 8000428:	429a      	cmp	r2, r3
 800042a:	d207      	bcs.n	800043c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800042c:	f000 f9ac 	bl	8000788 <__errno>
 8000430:	4603      	mov	r3, r0
 8000432:	220c      	movs	r2, #12
 8000434:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000436:	f04f 33ff 	mov.w	r3, #4294967295
 800043a:	e009      	b.n	8000450 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800043c:	4b08      	ldr	r3, [pc, #32]	; (8000460 <_sbrk+0x64>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000442:	4b07      	ldr	r3, [pc, #28]	; (8000460 <_sbrk+0x64>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4413      	add	r3, r2
 800044a:	4a05      	ldr	r2, [pc, #20]	; (8000460 <_sbrk+0x64>)
 800044c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044e:	68fb      	ldr	r3, [r7, #12]
}
 8000450:	4618      	mov	r0, r3
 8000452:	3718      	adds	r7, #24
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	20020000 	.word	0x20020000
 800045c:	00000400 	.word	0x00000400
 8000460:	20000078 	.word	0x20000078
 8000464:	200001c8 	.word	0x200001c8

08000468 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000468:	480d      	ldr	r0, [pc, #52]	; (80004a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800046a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800046c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000470:	480c      	ldr	r0, [pc, #48]	; (80004a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000472:	490d      	ldr	r1, [pc, #52]	; (80004a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000474:	4a0d      	ldr	r2, [pc, #52]	; (80004ac <LoopForever+0xe>)
  movs r3, #0
 8000476:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000478:	e002      	b.n	8000480 <LoopCopyDataInit>

0800047a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800047a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800047c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047e:	3304      	adds	r3, #4

08000480 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000480:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000482:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000484:	d3f9      	bcc.n	800047a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000486:	4a0a      	ldr	r2, [pc, #40]	; (80004b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000488:	4c0a      	ldr	r4, [pc, #40]	; (80004b4 <LoopForever+0x16>)
  movs r3, #0
 800048a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800048c:	e001      	b.n	8000492 <LoopFillZerobss>

0800048e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000490:	3204      	adds	r2, #4

08000492 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000492:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000494:	d3fb      	bcc.n	800048e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000496:	f000 f97d 	bl	8000794 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800049a:	f7ff fee9 	bl	8000270 <main>

0800049e <LoopForever>:

LoopForever:
  b LoopForever
 800049e:	e7fe      	b.n	800049e <LoopForever>
  ldr   r0, =_estack
 80004a0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004ac:	08001430 	.word	0x08001430
  ldr r2, =_sbss
 80004b0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004b4:	200001c8 	.word	0x200001c8

080004b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b8:	e7fe      	b.n	80004b8 <ADC_IRQHandler>
	...

080004bc <std>:
 80004bc:	2300      	movs	r3, #0
 80004be:	b510      	push	{r4, lr}
 80004c0:	4604      	mov	r4, r0
 80004c2:	e9c0 3300 	strd	r3, r3, [r0]
 80004c6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004ca:	6083      	str	r3, [r0, #8]
 80004cc:	8181      	strh	r1, [r0, #12]
 80004ce:	6643      	str	r3, [r0, #100]	; 0x64
 80004d0:	81c2      	strh	r2, [r0, #14]
 80004d2:	6183      	str	r3, [r0, #24]
 80004d4:	4619      	mov	r1, r3
 80004d6:	2208      	movs	r2, #8
 80004d8:	305c      	adds	r0, #92	; 0x5c
 80004da:	f000 f906 	bl	80006ea <memset>
 80004de:	4b0d      	ldr	r3, [pc, #52]	; (8000514 <std+0x58>)
 80004e0:	6263      	str	r3, [r4, #36]	; 0x24
 80004e2:	4b0d      	ldr	r3, [pc, #52]	; (8000518 <std+0x5c>)
 80004e4:	62a3      	str	r3, [r4, #40]	; 0x28
 80004e6:	4b0d      	ldr	r3, [pc, #52]	; (800051c <std+0x60>)
 80004e8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004ea:	4b0d      	ldr	r3, [pc, #52]	; (8000520 <std+0x64>)
 80004ec:	6323      	str	r3, [r4, #48]	; 0x30
 80004ee:	4b0d      	ldr	r3, [pc, #52]	; (8000524 <std+0x68>)
 80004f0:	6224      	str	r4, [r4, #32]
 80004f2:	429c      	cmp	r4, r3
 80004f4:	d006      	beq.n	8000504 <std+0x48>
 80004f6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80004fa:	4294      	cmp	r4, r2
 80004fc:	d002      	beq.n	8000504 <std+0x48>
 80004fe:	33d0      	adds	r3, #208	; 0xd0
 8000500:	429c      	cmp	r4, r3
 8000502:	d105      	bne.n	8000510 <std+0x54>
 8000504:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800050c:	f000 b966 	b.w	80007dc <__retarget_lock_init_recursive>
 8000510:	bd10      	pop	{r4, pc}
 8000512:	bf00      	nop
 8000514:	08000665 	.word	0x08000665
 8000518:	08000687 	.word	0x08000687
 800051c:	080006bf 	.word	0x080006bf
 8000520:	080006e3 	.word	0x080006e3
 8000524:	2000007c 	.word	0x2000007c

08000528 <stdio_exit_handler>:
 8000528:	4a02      	ldr	r2, [pc, #8]	; (8000534 <stdio_exit_handler+0xc>)
 800052a:	4903      	ldr	r1, [pc, #12]	; (8000538 <stdio_exit_handler+0x10>)
 800052c:	4803      	ldr	r0, [pc, #12]	; (800053c <stdio_exit_handler+0x14>)
 800052e:	f000 b869 	b.w	8000604 <_fwalk_sglue>
 8000532:	bf00      	nop
 8000534:	20000000 	.word	0x20000000
 8000538:	08001079 	.word	0x08001079
 800053c:	2000000c 	.word	0x2000000c

08000540 <cleanup_stdio>:
 8000540:	6841      	ldr	r1, [r0, #4]
 8000542:	4b0c      	ldr	r3, [pc, #48]	; (8000574 <cleanup_stdio+0x34>)
 8000544:	4299      	cmp	r1, r3
 8000546:	b510      	push	{r4, lr}
 8000548:	4604      	mov	r4, r0
 800054a:	d001      	beq.n	8000550 <cleanup_stdio+0x10>
 800054c:	f000 fd94 	bl	8001078 <_fflush_r>
 8000550:	68a1      	ldr	r1, [r4, #8]
 8000552:	4b09      	ldr	r3, [pc, #36]	; (8000578 <cleanup_stdio+0x38>)
 8000554:	4299      	cmp	r1, r3
 8000556:	d002      	beq.n	800055e <cleanup_stdio+0x1e>
 8000558:	4620      	mov	r0, r4
 800055a:	f000 fd8d 	bl	8001078 <_fflush_r>
 800055e:	68e1      	ldr	r1, [r4, #12]
 8000560:	4b06      	ldr	r3, [pc, #24]	; (800057c <cleanup_stdio+0x3c>)
 8000562:	4299      	cmp	r1, r3
 8000564:	d004      	beq.n	8000570 <cleanup_stdio+0x30>
 8000566:	4620      	mov	r0, r4
 8000568:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800056c:	f000 bd84 	b.w	8001078 <_fflush_r>
 8000570:	bd10      	pop	{r4, pc}
 8000572:	bf00      	nop
 8000574:	2000007c 	.word	0x2000007c
 8000578:	200000e4 	.word	0x200000e4
 800057c:	2000014c 	.word	0x2000014c

08000580 <global_stdio_init.part.0>:
 8000580:	b510      	push	{r4, lr}
 8000582:	4b0b      	ldr	r3, [pc, #44]	; (80005b0 <global_stdio_init.part.0+0x30>)
 8000584:	4c0b      	ldr	r4, [pc, #44]	; (80005b4 <global_stdio_init.part.0+0x34>)
 8000586:	4a0c      	ldr	r2, [pc, #48]	; (80005b8 <global_stdio_init.part.0+0x38>)
 8000588:	601a      	str	r2, [r3, #0]
 800058a:	4620      	mov	r0, r4
 800058c:	2200      	movs	r2, #0
 800058e:	2104      	movs	r1, #4
 8000590:	f7ff ff94 	bl	80004bc <std>
 8000594:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000598:	2201      	movs	r2, #1
 800059a:	2109      	movs	r1, #9
 800059c:	f7ff ff8e 	bl	80004bc <std>
 80005a0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80005a4:	2202      	movs	r2, #2
 80005a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005aa:	2112      	movs	r1, #18
 80005ac:	f7ff bf86 	b.w	80004bc <std>
 80005b0:	200001b4 	.word	0x200001b4
 80005b4:	2000007c 	.word	0x2000007c
 80005b8:	08000529 	.word	0x08000529

080005bc <__sfp_lock_acquire>:
 80005bc:	4801      	ldr	r0, [pc, #4]	; (80005c4 <__sfp_lock_acquire+0x8>)
 80005be:	f000 b90e 	b.w	80007de <__retarget_lock_acquire_recursive>
 80005c2:	bf00      	nop
 80005c4:	200001bd 	.word	0x200001bd

080005c8 <__sfp_lock_release>:
 80005c8:	4801      	ldr	r0, [pc, #4]	; (80005d0 <__sfp_lock_release+0x8>)
 80005ca:	f000 b909 	b.w	80007e0 <__retarget_lock_release_recursive>
 80005ce:	bf00      	nop
 80005d0:	200001bd 	.word	0x200001bd

080005d4 <__sinit>:
 80005d4:	b510      	push	{r4, lr}
 80005d6:	4604      	mov	r4, r0
 80005d8:	f7ff fff0 	bl	80005bc <__sfp_lock_acquire>
 80005dc:	6a23      	ldr	r3, [r4, #32]
 80005de:	b11b      	cbz	r3, 80005e8 <__sinit+0x14>
 80005e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e4:	f7ff bff0 	b.w	80005c8 <__sfp_lock_release>
 80005e8:	4b04      	ldr	r3, [pc, #16]	; (80005fc <__sinit+0x28>)
 80005ea:	6223      	str	r3, [r4, #32]
 80005ec:	4b04      	ldr	r3, [pc, #16]	; (8000600 <__sinit+0x2c>)
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	d1f5      	bne.n	80005e0 <__sinit+0xc>
 80005f4:	f7ff ffc4 	bl	8000580 <global_stdio_init.part.0>
 80005f8:	e7f2      	b.n	80005e0 <__sinit+0xc>
 80005fa:	bf00      	nop
 80005fc:	08000541 	.word	0x08000541
 8000600:	200001b4 	.word	0x200001b4

08000604 <_fwalk_sglue>:
 8000604:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000608:	4607      	mov	r7, r0
 800060a:	4688      	mov	r8, r1
 800060c:	4614      	mov	r4, r2
 800060e:	2600      	movs	r6, #0
 8000610:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000614:	f1b9 0901 	subs.w	r9, r9, #1
 8000618:	d505      	bpl.n	8000626 <_fwalk_sglue+0x22>
 800061a:	6824      	ldr	r4, [r4, #0]
 800061c:	2c00      	cmp	r4, #0
 800061e:	d1f7      	bne.n	8000610 <_fwalk_sglue+0xc>
 8000620:	4630      	mov	r0, r6
 8000622:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000626:	89ab      	ldrh	r3, [r5, #12]
 8000628:	2b01      	cmp	r3, #1
 800062a:	d907      	bls.n	800063c <_fwalk_sglue+0x38>
 800062c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000630:	3301      	adds	r3, #1
 8000632:	d003      	beq.n	800063c <_fwalk_sglue+0x38>
 8000634:	4629      	mov	r1, r5
 8000636:	4638      	mov	r0, r7
 8000638:	47c0      	blx	r8
 800063a:	4306      	orrs	r6, r0
 800063c:	3568      	adds	r5, #104	; 0x68
 800063e:	e7e9      	b.n	8000614 <_fwalk_sglue+0x10>

08000640 <iprintf>:
 8000640:	b40f      	push	{r0, r1, r2, r3}
 8000642:	b507      	push	{r0, r1, r2, lr}
 8000644:	4906      	ldr	r1, [pc, #24]	; (8000660 <iprintf+0x20>)
 8000646:	ab04      	add	r3, sp, #16
 8000648:	6808      	ldr	r0, [r1, #0]
 800064a:	f853 2b04 	ldr.w	r2, [r3], #4
 800064e:	6881      	ldr	r1, [r0, #8]
 8000650:	9301      	str	r3, [sp, #4]
 8000652:	f000 f9e5 	bl	8000a20 <_vfiprintf_r>
 8000656:	b003      	add	sp, #12
 8000658:	f85d eb04 	ldr.w	lr, [sp], #4
 800065c:	b004      	add	sp, #16
 800065e:	4770      	bx	lr
 8000660:	20000058 	.word	0x20000058

08000664 <__sread>:
 8000664:	b510      	push	{r4, lr}
 8000666:	460c      	mov	r4, r1
 8000668:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800066c:	f000 f868 	bl	8000740 <_read_r>
 8000670:	2800      	cmp	r0, #0
 8000672:	bfab      	itete	ge
 8000674:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000676:	89a3      	ldrhlt	r3, [r4, #12]
 8000678:	181b      	addge	r3, r3, r0
 800067a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800067e:	bfac      	ite	ge
 8000680:	6563      	strge	r3, [r4, #84]	; 0x54
 8000682:	81a3      	strhlt	r3, [r4, #12]
 8000684:	bd10      	pop	{r4, pc}

08000686 <__swrite>:
 8000686:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800068a:	461f      	mov	r7, r3
 800068c:	898b      	ldrh	r3, [r1, #12]
 800068e:	05db      	lsls	r3, r3, #23
 8000690:	4605      	mov	r5, r0
 8000692:	460c      	mov	r4, r1
 8000694:	4616      	mov	r6, r2
 8000696:	d505      	bpl.n	80006a4 <__swrite+0x1e>
 8000698:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800069c:	2302      	movs	r3, #2
 800069e:	2200      	movs	r2, #0
 80006a0:	f000 f83c 	bl	800071c <_lseek_r>
 80006a4:	89a3      	ldrh	r3, [r4, #12]
 80006a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80006ae:	81a3      	strh	r3, [r4, #12]
 80006b0:	4632      	mov	r2, r6
 80006b2:	463b      	mov	r3, r7
 80006b4:	4628      	mov	r0, r5
 80006b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006ba:	f000 b853 	b.w	8000764 <_write_r>

080006be <__sseek>:
 80006be:	b510      	push	{r4, lr}
 80006c0:	460c      	mov	r4, r1
 80006c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006c6:	f000 f829 	bl	800071c <_lseek_r>
 80006ca:	1c43      	adds	r3, r0, #1
 80006cc:	89a3      	ldrh	r3, [r4, #12]
 80006ce:	bf15      	itete	ne
 80006d0:	6560      	strne	r0, [r4, #84]	; 0x54
 80006d2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80006d6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80006da:	81a3      	strheq	r3, [r4, #12]
 80006dc:	bf18      	it	ne
 80006de:	81a3      	strhne	r3, [r4, #12]
 80006e0:	bd10      	pop	{r4, pc}

080006e2 <__sclose>:
 80006e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e6:	f000 b809 	b.w	80006fc <_close_r>

080006ea <memset>:
 80006ea:	4402      	add	r2, r0
 80006ec:	4603      	mov	r3, r0
 80006ee:	4293      	cmp	r3, r2
 80006f0:	d100      	bne.n	80006f4 <memset+0xa>
 80006f2:	4770      	bx	lr
 80006f4:	f803 1b01 	strb.w	r1, [r3], #1
 80006f8:	e7f9      	b.n	80006ee <memset+0x4>
	...

080006fc <_close_r>:
 80006fc:	b538      	push	{r3, r4, r5, lr}
 80006fe:	4d06      	ldr	r5, [pc, #24]	; (8000718 <_close_r+0x1c>)
 8000700:	2300      	movs	r3, #0
 8000702:	4604      	mov	r4, r0
 8000704:	4608      	mov	r0, r1
 8000706:	602b      	str	r3, [r5, #0]
 8000708:	f7ff fe47 	bl	800039a <_close>
 800070c:	1c43      	adds	r3, r0, #1
 800070e:	d102      	bne.n	8000716 <_close_r+0x1a>
 8000710:	682b      	ldr	r3, [r5, #0]
 8000712:	b103      	cbz	r3, 8000716 <_close_r+0x1a>
 8000714:	6023      	str	r3, [r4, #0]
 8000716:	bd38      	pop	{r3, r4, r5, pc}
 8000718:	200001b8 	.word	0x200001b8

0800071c <_lseek_r>:
 800071c:	b538      	push	{r3, r4, r5, lr}
 800071e:	4d07      	ldr	r5, [pc, #28]	; (800073c <_lseek_r+0x20>)
 8000720:	4604      	mov	r4, r0
 8000722:	4608      	mov	r0, r1
 8000724:	4611      	mov	r1, r2
 8000726:	2200      	movs	r2, #0
 8000728:	602a      	str	r2, [r5, #0]
 800072a:	461a      	mov	r2, r3
 800072c:	f7ff fe59 	bl	80003e2 <_lseek>
 8000730:	1c43      	adds	r3, r0, #1
 8000732:	d102      	bne.n	800073a <_lseek_r+0x1e>
 8000734:	682b      	ldr	r3, [r5, #0]
 8000736:	b103      	cbz	r3, 800073a <_lseek_r+0x1e>
 8000738:	6023      	str	r3, [r4, #0]
 800073a:	bd38      	pop	{r3, r4, r5, pc}
 800073c:	200001b8 	.word	0x200001b8

08000740 <_read_r>:
 8000740:	b538      	push	{r3, r4, r5, lr}
 8000742:	4d07      	ldr	r5, [pc, #28]	; (8000760 <_read_r+0x20>)
 8000744:	4604      	mov	r4, r0
 8000746:	4608      	mov	r0, r1
 8000748:	4611      	mov	r1, r2
 800074a:	2200      	movs	r2, #0
 800074c:	602a      	str	r2, [r5, #0]
 800074e:	461a      	mov	r2, r3
 8000750:	f7ff fdea 	bl	8000328 <_read>
 8000754:	1c43      	adds	r3, r0, #1
 8000756:	d102      	bne.n	800075e <_read_r+0x1e>
 8000758:	682b      	ldr	r3, [r5, #0]
 800075a:	b103      	cbz	r3, 800075e <_read_r+0x1e>
 800075c:	6023      	str	r3, [r4, #0]
 800075e:	bd38      	pop	{r3, r4, r5, pc}
 8000760:	200001b8 	.word	0x200001b8

08000764 <_write_r>:
 8000764:	b538      	push	{r3, r4, r5, lr}
 8000766:	4d07      	ldr	r5, [pc, #28]	; (8000784 <_write_r+0x20>)
 8000768:	4604      	mov	r4, r0
 800076a:	4608      	mov	r0, r1
 800076c:	4611      	mov	r1, r2
 800076e:	2200      	movs	r2, #0
 8000770:	602a      	str	r2, [r5, #0]
 8000772:	461a      	mov	r2, r3
 8000774:	f7ff fdf5 	bl	8000362 <_write>
 8000778:	1c43      	adds	r3, r0, #1
 800077a:	d102      	bne.n	8000782 <_write_r+0x1e>
 800077c:	682b      	ldr	r3, [r5, #0]
 800077e:	b103      	cbz	r3, 8000782 <_write_r+0x1e>
 8000780:	6023      	str	r3, [r4, #0]
 8000782:	bd38      	pop	{r3, r4, r5, pc}
 8000784:	200001b8 	.word	0x200001b8

08000788 <__errno>:
 8000788:	4b01      	ldr	r3, [pc, #4]	; (8000790 <__errno+0x8>)
 800078a:	6818      	ldr	r0, [r3, #0]
 800078c:	4770      	bx	lr
 800078e:	bf00      	nop
 8000790:	20000058 	.word	0x20000058

08000794 <__libc_init_array>:
 8000794:	b570      	push	{r4, r5, r6, lr}
 8000796:	4d0d      	ldr	r5, [pc, #52]	; (80007cc <__libc_init_array+0x38>)
 8000798:	4c0d      	ldr	r4, [pc, #52]	; (80007d0 <__libc_init_array+0x3c>)
 800079a:	1b64      	subs	r4, r4, r5
 800079c:	10a4      	asrs	r4, r4, #2
 800079e:	2600      	movs	r6, #0
 80007a0:	42a6      	cmp	r6, r4
 80007a2:	d109      	bne.n	80007b8 <__libc_init_array+0x24>
 80007a4:	4d0b      	ldr	r5, [pc, #44]	; (80007d4 <__libc_init_array+0x40>)
 80007a6:	4c0c      	ldr	r4, [pc, #48]	; (80007d8 <__libc_init_array+0x44>)
 80007a8:	f000 fdb8 	bl	800131c <_init>
 80007ac:	1b64      	subs	r4, r4, r5
 80007ae:	10a4      	asrs	r4, r4, #2
 80007b0:	2600      	movs	r6, #0
 80007b2:	42a6      	cmp	r6, r4
 80007b4:	d105      	bne.n	80007c2 <__libc_init_array+0x2e>
 80007b6:	bd70      	pop	{r4, r5, r6, pc}
 80007b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80007bc:	4798      	blx	r3
 80007be:	3601      	adds	r6, #1
 80007c0:	e7ee      	b.n	80007a0 <__libc_init_array+0xc>
 80007c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80007c6:	4798      	blx	r3
 80007c8:	3601      	adds	r6, #1
 80007ca:	e7f2      	b.n	80007b2 <__libc_init_array+0x1e>
 80007cc:	08001428 	.word	0x08001428
 80007d0:	08001428 	.word	0x08001428
 80007d4:	08001428 	.word	0x08001428
 80007d8:	0800142c 	.word	0x0800142c

080007dc <__retarget_lock_init_recursive>:
 80007dc:	4770      	bx	lr

080007de <__retarget_lock_acquire_recursive>:
 80007de:	4770      	bx	lr

080007e0 <__retarget_lock_release_recursive>:
 80007e0:	4770      	bx	lr
	...

080007e4 <_free_r>:
 80007e4:	b538      	push	{r3, r4, r5, lr}
 80007e6:	4605      	mov	r5, r0
 80007e8:	2900      	cmp	r1, #0
 80007ea:	d041      	beq.n	8000870 <_free_r+0x8c>
 80007ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007f0:	1f0c      	subs	r4, r1, #4
 80007f2:	2b00      	cmp	r3, #0
 80007f4:	bfb8      	it	lt
 80007f6:	18e4      	addlt	r4, r4, r3
 80007f8:	f000 f8de 	bl	80009b8 <__malloc_lock>
 80007fc:	4a1d      	ldr	r2, [pc, #116]	; (8000874 <_free_r+0x90>)
 80007fe:	6813      	ldr	r3, [r2, #0]
 8000800:	b933      	cbnz	r3, 8000810 <_free_r+0x2c>
 8000802:	6063      	str	r3, [r4, #4]
 8000804:	6014      	str	r4, [r2, #0]
 8000806:	4628      	mov	r0, r5
 8000808:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800080c:	f000 b8da 	b.w	80009c4 <__malloc_unlock>
 8000810:	42a3      	cmp	r3, r4
 8000812:	d908      	bls.n	8000826 <_free_r+0x42>
 8000814:	6820      	ldr	r0, [r4, #0]
 8000816:	1821      	adds	r1, r4, r0
 8000818:	428b      	cmp	r3, r1
 800081a:	bf01      	itttt	eq
 800081c:	6819      	ldreq	r1, [r3, #0]
 800081e:	685b      	ldreq	r3, [r3, #4]
 8000820:	1809      	addeq	r1, r1, r0
 8000822:	6021      	streq	r1, [r4, #0]
 8000824:	e7ed      	b.n	8000802 <_free_r+0x1e>
 8000826:	461a      	mov	r2, r3
 8000828:	685b      	ldr	r3, [r3, #4]
 800082a:	b10b      	cbz	r3, 8000830 <_free_r+0x4c>
 800082c:	42a3      	cmp	r3, r4
 800082e:	d9fa      	bls.n	8000826 <_free_r+0x42>
 8000830:	6811      	ldr	r1, [r2, #0]
 8000832:	1850      	adds	r0, r2, r1
 8000834:	42a0      	cmp	r0, r4
 8000836:	d10b      	bne.n	8000850 <_free_r+0x6c>
 8000838:	6820      	ldr	r0, [r4, #0]
 800083a:	4401      	add	r1, r0
 800083c:	1850      	adds	r0, r2, r1
 800083e:	4283      	cmp	r3, r0
 8000840:	6011      	str	r1, [r2, #0]
 8000842:	d1e0      	bne.n	8000806 <_free_r+0x22>
 8000844:	6818      	ldr	r0, [r3, #0]
 8000846:	685b      	ldr	r3, [r3, #4]
 8000848:	6053      	str	r3, [r2, #4]
 800084a:	4408      	add	r0, r1
 800084c:	6010      	str	r0, [r2, #0]
 800084e:	e7da      	b.n	8000806 <_free_r+0x22>
 8000850:	d902      	bls.n	8000858 <_free_r+0x74>
 8000852:	230c      	movs	r3, #12
 8000854:	602b      	str	r3, [r5, #0]
 8000856:	e7d6      	b.n	8000806 <_free_r+0x22>
 8000858:	6820      	ldr	r0, [r4, #0]
 800085a:	1821      	adds	r1, r4, r0
 800085c:	428b      	cmp	r3, r1
 800085e:	bf04      	itt	eq
 8000860:	6819      	ldreq	r1, [r3, #0]
 8000862:	685b      	ldreq	r3, [r3, #4]
 8000864:	6063      	str	r3, [r4, #4]
 8000866:	bf04      	itt	eq
 8000868:	1809      	addeq	r1, r1, r0
 800086a:	6021      	streq	r1, [r4, #0]
 800086c:	6054      	str	r4, [r2, #4]
 800086e:	e7ca      	b.n	8000806 <_free_r+0x22>
 8000870:	bd38      	pop	{r3, r4, r5, pc}
 8000872:	bf00      	nop
 8000874:	200001c0 	.word	0x200001c0

08000878 <sbrk_aligned>:
 8000878:	b570      	push	{r4, r5, r6, lr}
 800087a:	4e0e      	ldr	r6, [pc, #56]	; (80008b4 <sbrk_aligned+0x3c>)
 800087c:	460c      	mov	r4, r1
 800087e:	6831      	ldr	r1, [r6, #0]
 8000880:	4605      	mov	r5, r0
 8000882:	b911      	cbnz	r1, 800088a <sbrk_aligned+0x12>
 8000884:	f000 fcb6 	bl	80011f4 <_sbrk_r>
 8000888:	6030      	str	r0, [r6, #0]
 800088a:	4621      	mov	r1, r4
 800088c:	4628      	mov	r0, r5
 800088e:	f000 fcb1 	bl	80011f4 <_sbrk_r>
 8000892:	1c43      	adds	r3, r0, #1
 8000894:	d00a      	beq.n	80008ac <sbrk_aligned+0x34>
 8000896:	1cc4      	adds	r4, r0, #3
 8000898:	f024 0403 	bic.w	r4, r4, #3
 800089c:	42a0      	cmp	r0, r4
 800089e:	d007      	beq.n	80008b0 <sbrk_aligned+0x38>
 80008a0:	1a21      	subs	r1, r4, r0
 80008a2:	4628      	mov	r0, r5
 80008a4:	f000 fca6 	bl	80011f4 <_sbrk_r>
 80008a8:	3001      	adds	r0, #1
 80008aa:	d101      	bne.n	80008b0 <sbrk_aligned+0x38>
 80008ac:	f04f 34ff 	mov.w	r4, #4294967295
 80008b0:	4620      	mov	r0, r4
 80008b2:	bd70      	pop	{r4, r5, r6, pc}
 80008b4:	200001c4 	.word	0x200001c4

080008b8 <_malloc_r>:
 80008b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008bc:	1ccd      	adds	r5, r1, #3
 80008be:	f025 0503 	bic.w	r5, r5, #3
 80008c2:	3508      	adds	r5, #8
 80008c4:	2d0c      	cmp	r5, #12
 80008c6:	bf38      	it	cc
 80008c8:	250c      	movcc	r5, #12
 80008ca:	2d00      	cmp	r5, #0
 80008cc:	4607      	mov	r7, r0
 80008ce:	db01      	blt.n	80008d4 <_malloc_r+0x1c>
 80008d0:	42a9      	cmp	r1, r5
 80008d2:	d905      	bls.n	80008e0 <_malloc_r+0x28>
 80008d4:	230c      	movs	r3, #12
 80008d6:	603b      	str	r3, [r7, #0]
 80008d8:	2600      	movs	r6, #0
 80008da:	4630      	mov	r0, r6
 80008dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008e0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80009b4 <_malloc_r+0xfc>
 80008e4:	f000 f868 	bl	80009b8 <__malloc_lock>
 80008e8:	f8d8 3000 	ldr.w	r3, [r8]
 80008ec:	461c      	mov	r4, r3
 80008ee:	bb5c      	cbnz	r4, 8000948 <_malloc_r+0x90>
 80008f0:	4629      	mov	r1, r5
 80008f2:	4638      	mov	r0, r7
 80008f4:	f7ff ffc0 	bl	8000878 <sbrk_aligned>
 80008f8:	1c43      	adds	r3, r0, #1
 80008fa:	4604      	mov	r4, r0
 80008fc:	d155      	bne.n	80009aa <_malloc_r+0xf2>
 80008fe:	f8d8 4000 	ldr.w	r4, [r8]
 8000902:	4626      	mov	r6, r4
 8000904:	2e00      	cmp	r6, #0
 8000906:	d145      	bne.n	8000994 <_malloc_r+0xdc>
 8000908:	2c00      	cmp	r4, #0
 800090a:	d048      	beq.n	800099e <_malloc_r+0xe6>
 800090c:	6823      	ldr	r3, [r4, #0]
 800090e:	4631      	mov	r1, r6
 8000910:	4638      	mov	r0, r7
 8000912:	eb04 0903 	add.w	r9, r4, r3
 8000916:	f000 fc6d 	bl	80011f4 <_sbrk_r>
 800091a:	4581      	cmp	r9, r0
 800091c:	d13f      	bne.n	800099e <_malloc_r+0xe6>
 800091e:	6821      	ldr	r1, [r4, #0]
 8000920:	1a6d      	subs	r5, r5, r1
 8000922:	4629      	mov	r1, r5
 8000924:	4638      	mov	r0, r7
 8000926:	f7ff ffa7 	bl	8000878 <sbrk_aligned>
 800092a:	3001      	adds	r0, #1
 800092c:	d037      	beq.n	800099e <_malloc_r+0xe6>
 800092e:	6823      	ldr	r3, [r4, #0]
 8000930:	442b      	add	r3, r5
 8000932:	6023      	str	r3, [r4, #0]
 8000934:	f8d8 3000 	ldr.w	r3, [r8]
 8000938:	2b00      	cmp	r3, #0
 800093a:	d038      	beq.n	80009ae <_malloc_r+0xf6>
 800093c:	685a      	ldr	r2, [r3, #4]
 800093e:	42a2      	cmp	r2, r4
 8000940:	d12b      	bne.n	800099a <_malloc_r+0xe2>
 8000942:	2200      	movs	r2, #0
 8000944:	605a      	str	r2, [r3, #4]
 8000946:	e00f      	b.n	8000968 <_malloc_r+0xb0>
 8000948:	6822      	ldr	r2, [r4, #0]
 800094a:	1b52      	subs	r2, r2, r5
 800094c:	d41f      	bmi.n	800098e <_malloc_r+0xd6>
 800094e:	2a0b      	cmp	r2, #11
 8000950:	d917      	bls.n	8000982 <_malloc_r+0xca>
 8000952:	1961      	adds	r1, r4, r5
 8000954:	42a3      	cmp	r3, r4
 8000956:	6025      	str	r5, [r4, #0]
 8000958:	bf18      	it	ne
 800095a:	6059      	strne	r1, [r3, #4]
 800095c:	6863      	ldr	r3, [r4, #4]
 800095e:	bf08      	it	eq
 8000960:	f8c8 1000 	streq.w	r1, [r8]
 8000964:	5162      	str	r2, [r4, r5]
 8000966:	604b      	str	r3, [r1, #4]
 8000968:	4638      	mov	r0, r7
 800096a:	f104 060b 	add.w	r6, r4, #11
 800096e:	f000 f829 	bl	80009c4 <__malloc_unlock>
 8000972:	f026 0607 	bic.w	r6, r6, #7
 8000976:	1d23      	adds	r3, r4, #4
 8000978:	1af2      	subs	r2, r6, r3
 800097a:	d0ae      	beq.n	80008da <_malloc_r+0x22>
 800097c:	1b9b      	subs	r3, r3, r6
 800097e:	50a3      	str	r3, [r4, r2]
 8000980:	e7ab      	b.n	80008da <_malloc_r+0x22>
 8000982:	42a3      	cmp	r3, r4
 8000984:	6862      	ldr	r2, [r4, #4]
 8000986:	d1dd      	bne.n	8000944 <_malloc_r+0x8c>
 8000988:	f8c8 2000 	str.w	r2, [r8]
 800098c:	e7ec      	b.n	8000968 <_malloc_r+0xb0>
 800098e:	4623      	mov	r3, r4
 8000990:	6864      	ldr	r4, [r4, #4]
 8000992:	e7ac      	b.n	80008ee <_malloc_r+0x36>
 8000994:	4634      	mov	r4, r6
 8000996:	6876      	ldr	r6, [r6, #4]
 8000998:	e7b4      	b.n	8000904 <_malloc_r+0x4c>
 800099a:	4613      	mov	r3, r2
 800099c:	e7cc      	b.n	8000938 <_malloc_r+0x80>
 800099e:	230c      	movs	r3, #12
 80009a0:	603b      	str	r3, [r7, #0]
 80009a2:	4638      	mov	r0, r7
 80009a4:	f000 f80e 	bl	80009c4 <__malloc_unlock>
 80009a8:	e797      	b.n	80008da <_malloc_r+0x22>
 80009aa:	6025      	str	r5, [r4, #0]
 80009ac:	e7dc      	b.n	8000968 <_malloc_r+0xb0>
 80009ae:	605b      	str	r3, [r3, #4]
 80009b0:	deff      	udf	#255	; 0xff
 80009b2:	bf00      	nop
 80009b4:	200001c0 	.word	0x200001c0

080009b8 <__malloc_lock>:
 80009b8:	4801      	ldr	r0, [pc, #4]	; (80009c0 <__malloc_lock+0x8>)
 80009ba:	f7ff bf10 	b.w	80007de <__retarget_lock_acquire_recursive>
 80009be:	bf00      	nop
 80009c0:	200001bc 	.word	0x200001bc

080009c4 <__malloc_unlock>:
 80009c4:	4801      	ldr	r0, [pc, #4]	; (80009cc <__malloc_unlock+0x8>)
 80009c6:	f7ff bf0b 	b.w	80007e0 <__retarget_lock_release_recursive>
 80009ca:	bf00      	nop
 80009cc:	200001bc 	.word	0x200001bc

080009d0 <__sfputc_r>:
 80009d0:	6893      	ldr	r3, [r2, #8]
 80009d2:	3b01      	subs	r3, #1
 80009d4:	2b00      	cmp	r3, #0
 80009d6:	b410      	push	{r4}
 80009d8:	6093      	str	r3, [r2, #8]
 80009da:	da07      	bge.n	80009ec <__sfputc_r+0x1c>
 80009dc:	6994      	ldr	r4, [r2, #24]
 80009de:	42a3      	cmp	r3, r4
 80009e0:	db01      	blt.n	80009e6 <__sfputc_r+0x16>
 80009e2:	290a      	cmp	r1, #10
 80009e4:	d102      	bne.n	80009ec <__sfputc_r+0x1c>
 80009e6:	bc10      	pop	{r4}
 80009e8:	f000 bb6e 	b.w	80010c8 <__swbuf_r>
 80009ec:	6813      	ldr	r3, [r2, #0]
 80009ee:	1c58      	adds	r0, r3, #1
 80009f0:	6010      	str	r0, [r2, #0]
 80009f2:	7019      	strb	r1, [r3, #0]
 80009f4:	4608      	mov	r0, r1
 80009f6:	bc10      	pop	{r4}
 80009f8:	4770      	bx	lr

080009fa <__sfputs_r>:
 80009fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009fc:	4606      	mov	r6, r0
 80009fe:	460f      	mov	r7, r1
 8000a00:	4614      	mov	r4, r2
 8000a02:	18d5      	adds	r5, r2, r3
 8000a04:	42ac      	cmp	r4, r5
 8000a06:	d101      	bne.n	8000a0c <__sfputs_r+0x12>
 8000a08:	2000      	movs	r0, #0
 8000a0a:	e007      	b.n	8000a1c <__sfputs_r+0x22>
 8000a0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a10:	463a      	mov	r2, r7
 8000a12:	4630      	mov	r0, r6
 8000a14:	f7ff ffdc 	bl	80009d0 <__sfputc_r>
 8000a18:	1c43      	adds	r3, r0, #1
 8000a1a:	d1f3      	bne.n	8000a04 <__sfputs_r+0xa>
 8000a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a20 <_vfiprintf_r>:
 8000a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a24:	460d      	mov	r5, r1
 8000a26:	b09d      	sub	sp, #116	; 0x74
 8000a28:	4614      	mov	r4, r2
 8000a2a:	4698      	mov	r8, r3
 8000a2c:	4606      	mov	r6, r0
 8000a2e:	b118      	cbz	r0, 8000a38 <_vfiprintf_r+0x18>
 8000a30:	6a03      	ldr	r3, [r0, #32]
 8000a32:	b90b      	cbnz	r3, 8000a38 <_vfiprintf_r+0x18>
 8000a34:	f7ff fdce 	bl	80005d4 <__sinit>
 8000a38:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a3a:	07d9      	lsls	r1, r3, #31
 8000a3c:	d405      	bmi.n	8000a4a <_vfiprintf_r+0x2a>
 8000a3e:	89ab      	ldrh	r3, [r5, #12]
 8000a40:	059a      	lsls	r2, r3, #22
 8000a42:	d402      	bmi.n	8000a4a <_vfiprintf_r+0x2a>
 8000a44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a46:	f7ff feca 	bl	80007de <__retarget_lock_acquire_recursive>
 8000a4a:	89ab      	ldrh	r3, [r5, #12]
 8000a4c:	071b      	lsls	r3, r3, #28
 8000a4e:	d501      	bpl.n	8000a54 <_vfiprintf_r+0x34>
 8000a50:	692b      	ldr	r3, [r5, #16]
 8000a52:	b99b      	cbnz	r3, 8000a7c <_vfiprintf_r+0x5c>
 8000a54:	4629      	mov	r1, r5
 8000a56:	4630      	mov	r0, r6
 8000a58:	f000 fb74 	bl	8001144 <__swsetup_r>
 8000a5c:	b170      	cbz	r0, 8000a7c <_vfiprintf_r+0x5c>
 8000a5e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a60:	07dc      	lsls	r4, r3, #31
 8000a62:	d504      	bpl.n	8000a6e <_vfiprintf_r+0x4e>
 8000a64:	f04f 30ff 	mov.w	r0, #4294967295
 8000a68:	b01d      	add	sp, #116	; 0x74
 8000a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a6e:	89ab      	ldrh	r3, [r5, #12]
 8000a70:	0598      	lsls	r0, r3, #22
 8000a72:	d4f7      	bmi.n	8000a64 <_vfiprintf_r+0x44>
 8000a74:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a76:	f7ff feb3 	bl	80007e0 <__retarget_lock_release_recursive>
 8000a7a:	e7f3      	b.n	8000a64 <_vfiprintf_r+0x44>
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	9309      	str	r3, [sp, #36]	; 0x24
 8000a80:	2320      	movs	r3, #32
 8000a82:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a86:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a8a:	2330      	movs	r3, #48	; 0x30
 8000a8c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c40 <_vfiprintf_r+0x220>
 8000a90:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a94:	f04f 0901 	mov.w	r9, #1
 8000a98:	4623      	mov	r3, r4
 8000a9a:	469a      	mov	sl, r3
 8000a9c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000aa0:	b10a      	cbz	r2, 8000aa6 <_vfiprintf_r+0x86>
 8000aa2:	2a25      	cmp	r2, #37	; 0x25
 8000aa4:	d1f9      	bne.n	8000a9a <_vfiprintf_r+0x7a>
 8000aa6:	ebba 0b04 	subs.w	fp, sl, r4
 8000aaa:	d00b      	beq.n	8000ac4 <_vfiprintf_r+0xa4>
 8000aac:	465b      	mov	r3, fp
 8000aae:	4622      	mov	r2, r4
 8000ab0:	4629      	mov	r1, r5
 8000ab2:	4630      	mov	r0, r6
 8000ab4:	f7ff ffa1 	bl	80009fa <__sfputs_r>
 8000ab8:	3001      	adds	r0, #1
 8000aba:	f000 80a9 	beq.w	8000c10 <_vfiprintf_r+0x1f0>
 8000abe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ac0:	445a      	add	r2, fp
 8000ac2:	9209      	str	r2, [sp, #36]	; 0x24
 8000ac4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	f000 80a1 	beq.w	8000c10 <_vfiprintf_r+0x1f0>
 8000ace:	2300      	movs	r3, #0
 8000ad0:	f04f 32ff 	mov.w	r2, #4294967295
 8000ad4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ad8:	f10a 0a01 	add.w	sl, sl, #1
 8000adc:	9304      	str	r3, [sp, #16]
 8000ade:	9307      	str	r3, [sp, #28]
 8000ae0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ae4:	931a      	str	r3, [sp, #104]	; 0x68
 8000ae6:	4654      	mov	r4, sl
 8000ae8:	2205      	movs	r2, #5
 8000aea:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aee:	4854      	ldr	r0, [pc, #336]	; (8000c40 <_vfiprintf_r+0x220>)
 8000af0:	f7ff fb6e 	bl	80001d0 <memchr>
 8000af4:	9a04      	ldr	r2, [sp, #16]
 8000af6:	b9d8      	cbnz	r0, 8000b30 <_vfiprintf_r+0x110>
 8000af8:	06d1      	lsls	r1, r2, #27
 8000afa:	bf44      	itt	mi
 8000afc:	2320      	movmi	r3, #32
 8000afe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b02:	0713      	lsls	r3, r2, #28
 8000b04:	bf44      	itt	mi
 8000b06:	232b      	movmi	r3, #43	; 0x2b
 8000b08:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b0c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b10:	2b2a      	cmp	r3, #42	; 0x2a
 8000b12:	d015      	beq.n	8000b40 <_vfiprintf_r+0x120>
 8000b14:	9a07      	ldr	r2, [sp, #28]
 8000b16:	4654      	mov	r4, sl
 8000b18:	2000      	movs	r0, #0
 8000b1a:	f04f 0c0a 	mov.w	ip, #10
 8000b1e:	4621      	mov	r1, r4
 8000b20:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b24:	3b30      	subs	r3, #48	; 0x30
 8000b26:	2b09      	cmp	r3, #9
 8000b28:	d94d      	bls.n	8000bc6 <_vfiprintf_r+0x1a6>
 8000b2a:	b1b0      	cbz	r0, 8000b5a <_vfiprintf_r+0x13a>
 8000b2c:	9207      	str	r2, [sp, #28]
 8000b2e:	e014      	b.n	8000b5a <_vfiprintf_r+0x13a>
 8000b30:	eba0 0308 	sub.w	r3, r0, r8
 8000b34:	fa09 f303 	lsl.w	r3, r9, r3
 8000b38:	4313      	orrs	r3, r2
 8000b3a:	9304      	str	r3, [sp, #16]
 8000b3c:	46a2      	mov	sl, r4
 8000b3e:	e7d2      	b.n	8000ae6 <_vfiprintf_r+0xc6>
 8000b40:	9b03      	ldr	r3, [sp, #12]
 8000b42:	1d19      	adds	r1, r3, #4
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	9103      	str	r1, [sp, #12]
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	bfbb      	ittet	lt
 8000b4c:	425b      	neglt	r3, r3
 8000b4e:	f042 0202 	orrlt.w	r2, r2, #2
 8000b52:	9307      	strge	r3, [sp, #28]
 8000b54:	9307      	strlt	r3, [sp, #28]
 8000b56:	bfb8      	it	lt
 8000b58:	9204      	strlt	r2, [sp, #16]
 8000b5a:	7823      	ldrb	r3, [r4, #0]
 8000b5c:	2b2e      	cmp	r3, #46	; 0x2e
 8000b5e:	d10c      	bne.n	8000b7a <_vfiprintf_r+0x15a>
 8000b60:	7863      	ldrb	r3, [r4, #1]
 8000b62:	2b2a      	cmp	r3, #42	; 0x2a
 8000b64:	d134      	bne.n	8000bd0 <_vfiprintf_r+0x1b0>
 8000b66:	9b03      	ldr	r3, [sp, #12]
 8000b68:	1d1a      	adds	r2, r3, #4
 8000b6a:	681b      	ldr	r3, [r3, #0]
 8000b6c:	9203      	str	r2, [sp, #12]
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	bfb8      	it	lt
 8000b72:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b76:	3402      	adds	r4, #2
 8000b78:	9305      	str	r3, [sp, #20]
 8000b7a:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000c44 <_vfiprintf_r+0x224>
 8000b7e:	7821      	ldrb	r1, [r4, #0]
 8000b80:	2203      	movs	r2, #3
 8000b82:	4650      	mov	r0, sl
 8000b84:	f7ff fb24 	bl	80001d0 <memchr>
 8000b88:	b138      	cbz	r0, 8000b9a <_vfiprintf_r+0x17a>
 8000b8a:	9b04      	ldr	r3, [sp, #16]
 8000b8c:	eba0 000a 	sub.w	r0, r0, sl
 8000b90:	2240      	movs	r2, #64	; 0x40
 8000b92:	4082      	lsls	r2, r0
 8000b94:	4313      	orrs	r3, r2
 8000b96:	3401      	adds	r4, #1
 8000b98:	9304      	str	r3, [sp, #16]
 8000b9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b9e:	482a      	ldr	r0, [pc, #168]	; (8000c48 <_vfiprintf_r+0x228>)
 8000ba0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ba4:	2206      	movs	r2, #6
 8000ba6:	f7ff fb13 	bl	80001d0 <memchr>
 8000baa:	2800      	cmp	r0, #0
 8000bac:	d03f      	beq.n	8000c2e <_vfiprintf_r+0x20e>
 8000bae:	4b27      	ldr	r3, [pc, #156]	; (8000c4c <_vfiprintf_r+0x22c>)
 8000bb0:	bb1b      	cbnz	r3, 8000bfa <_vfiprintf_r+0x1da>
 8000bb2:	9b03      	ldr	r3, [sp, #12]
 8000bb4:	3307      	adds	r3, #7
 8000bb6:	f023 0307 	bic.w	r3, r3, #7
 8000bba:	3308      	adds	r3, #8
 8000bbc:	9303      	str	r3, [sp, #12]
 8000bbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bc0:	443b      	add	r3, r7
 8000bc2:	9309      	str	r3, [sp, #36]	; 0x24
 8000bc4:	e768      	b.n	8000a98 <_vfiprintf_r+0x78>
 8000bc6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bca:	460c      	mov	r4, r1
 8000bcc:	2001      	movs	r0, #1
 8000bce:	e7a6      	b.n	8000b1e <_vfiprintf_r+0xfe>
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	3401      	adds	r4, #1
 8000bd4:	9305      	str	r3, [sp, #20]
 8000bd6:	4619      	mov	r1, r3
 8000bd8:	f04f 0c0a 	mov.w	ip, #10
 8000bdc:	4620      	mov	r0, r4
 8000bde:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000be2:	3a30      	subs	r2, #48	; 0x30
 8000be4:	2a09      	cmp	r2, #9
 8000be6:	d903      	bls.n	8000bf0 <_vfiprintf_r+0x1d0>
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d0c6      	beq.n	8000b7a <_vfiprintf_r+0x15a>
 8000bec:	9105      	str	r1, [sp, #20]
 8000bee:	e7c4      	b.n	8000b7a <_vfiprintf_r+0x15a>
 8000bf0:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bf4:	4604      	mov	r4, r0
 8000bf6:	2301      	movs	r3, #1
 8000bf8:	e7f0      	b.n	8000bdc <_vfiprintf_r+0x1bc>
 8000bfa:	ab03      	add	r3, sp, #12
 8000bfc:	9300      	str	r3, [sp, #0]
 8000bfe:	462a      	mov	r2, r5
 8000c00:	4b13      	ldr	r3, [pc, #76]	; (8000c50 <_vfiprintf_r+0x230>)
 8000c02:	a904      	add	r1, sp, #16
 8000c04:	4630      	mov	r0, r6
 8000c06:	f3af 8000 	nop.w
 8000c0a:	4607      	mov	r7, r0
 8000c0c:	1c78      	adds	r0, r7, #1
 8000c0e:	d1d6      	bne.n	8000bbe <_vfiprintf_r+0x19e>
 8000c10:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c12:	07d9      	lsls	r1, r3, #31
 8000c14:	d405      	bmi.n	8000c22 <_vfiprintf_r+0x202>
 8000c16:	89ab      	ldrh	r3, [r5, #12]
 8000c18:	059a      	lsls	r2, r3, #22
 8000c1a:	d402      	bmi.n	8000c22 <_vfiprintf_r+0x202>
 8000c1c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c1e:	f7ff fddf 	bl	80007e0 <__retarget_lock_release_recursive>
 8000c22:	89ab      	ldrh	r3, [r5, #12]
 8000c24:	065b      	lsls	r3, r3, #25
 8000c26:	f53f af1d 	bmi.w	8000a64 <_vfiprintf_r+0x44>
 8000c2a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c2c:	e71c      	b.n	8000a68 <_vfiprintf_r+0x48>
 8000c2e:	ab03      	add	r3, sp, #12
 8000c30:	9300      	str	r3, [sp, #0]
 8000c32:	462a      	mov	r2, r5
 8000c34:	4b06      	ldr	r3, [pc, #24]	; (8000c50 <_vfiprintf_r+0x230>)
 8000c36:	a904      	add	r1, sp, #16
 8000c38:	4630      	mov	r0, r6
 8000c3a:	f000 f879 	bl	8000d30 <_printf_i>
 8000c3e:	e7e4      	b.n	8000c0a <_vfiprintf_r+0x1ea>
 8000c40:	080013f5 	.word	0x080013f5
 8000c44:	080013fb 	.word	0x080013fb
 8000c48:	080013ff 	.word	0x080013ff
 8000c4c:	00000000 	.word	0x00000000
 8000c50:	080009fb 	.word	0x080009fb

08000c54 <_printf_common>:
 8000c54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c58:	4616      	mov	r6, r2
 8000c5a:	4699      	mov	r9, r3
 8000c5c:	688a      	ldr	r2, [r1, #8]
 8000c5e:	690b      	ldr	r3, [r1, #16]
 8000c60:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c64:	4293      	cmp	r3, r2
 8000c66:	bfb8      	it	lt
 8000c68:	4613      	movlt	r3, r2
 8000c6a:	6033      	str	r3, [r6, #0]
 8000c6c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c70:	4607      	mov	r7, r0
 8000c72:	460c      	mov	r4, r1
 8000c74:	b10a      	cbz	r2, 8000c7a <_printf_common+0x26>
 8000c76:	3301      	adds	r3, #1
 8000c78:	6033      	str	r3, [r6, #0]
 8000c7a:	6823      	ldr	r3, [r4, #0]
 8000c7c:	0699      	lsls	r1, r3, #26
 8000c7e:	bf42      	ittt	mi
 8000c80:	6833      	ldrmi	r3, [r6, #0]
 8000c82:	3302      	addmi	r3, #2
 8000c84:	6033      	strmi	r3, [r6, #0]
 8000c86:	6825      	ldr	r5, [r4, #0]
 8000c88:	f015 0506 	ands.w	r5, r5, #6
 8000c8c:	d106      	bne.n	8000c9c <_printf_common+0x48>
 8000c8e:	f104 0a19 	add.w	sl, r4, #25
 8000c92:	68e3      	ldr	r3, [r4, #12]
 8000c94:	6832      	ldr	r2, [r6, #0]
 8000c96:	1a9b      	subs	r3, r3, r2
 8000c98:	42ab      	cmp	r3, r5
 8000c9a:	dc26      	bgt.n	8000cea <_printf_common+0x96>
 8000c9c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ca0:	1e13      	subs	r3, r2, #0
 8000ca2:	6822      	ldr	r2, [r4, #0]
 8000ca4:	bf18      	it	ne
 8000ca6:	2301      	movne	r3, #1
 8000ca8:	0692      	lsls	r2, r2, #26
 8000caa:	d42b      	bmi.n	8000d04 <_printf_common+0xb0>
 8000cac:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cb0:	4649      	mov	r1, r9
 8000cb2:	4638      	mov	r0, r7
 8000cb4:	47c0      	blx	r8
 8000cb6:	3001      	adds	r0, #1
 8000cb8:	d01e      	beq.n	8000cf8 <_printf_common+0xa4>
 8000cba:	6823      	ldr	r3, [r4, #0]
 8000cbc:	6922      	ldr	r2, [r4, #16]
 8000cbe:	f003 0306 	and.w	r3, r3, #6
 8000cc2:	2b04      	cmp	r3, #4
 8000cc4:	bf02      	ittt	eq
 8000cc6:	68e5      	ldreq	r5, [r4, #12]
 8000cc8:	6833      	ldreq	r3, [r6, #0]
 8000cca:	1aed      	subeq	r5, r5, r3
 8000ccc:	68a3      	ldr	r3, [r4, #8]
 8000cce:	bf0c      	ite	eq
 8000cd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cd4:	2500      	movne	r5, #0
 8000cd6:	4293      	cmp	r3, r2
 8000cd8:	bfc4      	itt	gt
 8000cda:	1a9b      	subgt	r3, r3, r2
 8000cdc:	18ed      	addgt	r5, r5, r3
 8000cde:	2600      	movs	r6, #0
 8000ce0:	341a      	adds	r4, #26
 8000ce2:	42b5      	cmp	r5, r6
 8000ce4:	d11a      	bne.n	8000d1c <_printf_common+0xc8>
 8000ce6:	2000      	movs	r0, #0
 8000ce8:	e008      	b.n	8000cfc <_printf_common+0xa8>
 8000cea:	2301      	movs	r3, #1
 8000cec:	4652      	mov	r2, sl
 8000cee:	4649      	mov	r1, r9
 8000cf0:	4638      	mov	r0, r7
 8000cf2:	47c0      	blx	r8
 8000cf4:	3001      	adds	r0, #1
 8000cf6:	d103      	bne.n	8000d00 <_printf_common+0xac>
 8000cf8:	f04f 30ff 	mov.w	r0, #4294967295
 8000cfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d00:	3501      	adds	r5, #1
 8000d02:	e7c6      	b.n	8000c92 <_printf_common+0x3e>
 8000d04:	18e1      	adds	r1, r4, r3
 8000d06:	1c5a      	adds	r2, r3, #1
 8000d08:	2030      	movs	r0, #48	; 0x30
 8000d0a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d0e:	4422      	add	r2, r4
 8000d10:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d14:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d18:	3302      	adds	r3, #2
 8000d1a:	e7c7      	b.n	8000cac <_printf_common+0x58>
 8000d1c:	2301      	movs	r3, #1
 8000d1e:	4622      	mov	r2, r4
 8000d20:	4649      	mov	r1, r9
 8000d22:	4638      	mov	r0, r7
 8000d24:	47c0      	blx	r8
 8000d26:	3001      	adds	r0, #1
 8000d28:	d0e6      	beq.n	8000cf8 <_printf_common+0xa4>
 8000d2a:	3601      	adds	r6, #1
 8000d2c:	e7d9      	b.n	8000ce2 <_printf_common+0x8e>
	...

08000d30 <_printf_i>:
 8000d30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d34:	7e0f      	ldrb	r7, [r1, #24]
 8000d36:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d38:	2f78      	cmp	r7, #120	; 0x78
 8000d3a:	4691      	mov	r9, r2
 8000d3c:	4680      	mov	r8, r0
 8000d3e:	460c      	mov	r4, r1
 8000d40:	469a      	mov	sl, r3
 8000d42:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d46:	d807      	bhi.n	8000d58 <_printf_i+0x28>
 8000d48:	2f62      	cmp	r7, #98	; 0x62
 8000d4a:	d80a      	bhi.n	8000d62 <_printf_i+0x32>
 8000d4c:	2f00      	cmp	r7, #0
 8000d4e:	f000 80d4 	beq.w	8000efa <_printf_i+0x1ca>
 8000d52:	2f58      	cmp	r7, #88	; 0x58
 8000d54:	f000 80c0 	beq.w	8000ed8 <_printf_i+0x1a8>
 8000d58:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d5c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d60:	e03a      	b.n	8000dd8 <_printf_i+0xa8>
 8000d62:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d66:	2b15      	cmp	r3, #21
 8000d68:	d8f6      	bhi.n	8000d58 <_printf_i+0x28>
 8000d6a:	a101      	add	r1, pc, #4	; (adr r1, 8000d70 <_printf_i+0x40>)
 8000d6c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d70:	08000dc9 	.word	0x08000dc9
 8000d74:	08000ddd 	.word	0x08000ddd
 8000d78:	08000d59 	.word	0x08000d59
 8000d7c:	08000d59 	.word	0x08000d59
 8000d80:	08000d59 	.word	0x08000d59
 8000d84:	08000d59 	.word	0x08000d59
 8000d88:	08000ddd 	.word	0x08000ddd
 8000d8c:	08000d59 	.word	0x08000d59
 8000d90:	08000d59 	.word	0x08000d59
 8000d94:	08000d59 	.word	0x08000d59
 8000d98:	08000d59 	.word	0x08000d59
 8000d9c:	08000ee1 	.word	0x08000ee1
 8000da0:	08000e09 	.word	0x08000e09
 8000da4:	08000e9b 	.word	0x08000e9b
 8000da8:	08000d59 	.word	0x08000d59
 8000dac:	08000d59 	.word	0x08000d59
 8000db0:	08000f03 	.word	0x08000f03
 8000db4:	08000d59 	.word	0x08000d59
 8000db8:	08000e09 	.word	0x08000e09
 8000dbc:	08000d59 	.word	0x08000d59
 8000dc0:	08000d59 	.word	0x08000d59
 8000dc4:	08000ea3 	.word	0x08000ea3
 8000dc8:	682b      	ldr	r3, [r5, #0]
 8000dca:	1d1a      	adds	r2, r3, #4
 8000dcc:	681b      	ldr	r3, [r3, #0]
 8000dce:	602a      	str	r2, [r5, #0]
 8000dd0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000dd4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000dd8:	2301      	movs	r3, #1
 8000dda:	e09f      	b.n	8000f1c <_printf_i+0x1ec>
 8000ddc:	6820      	ldr	r0, [r4, #0]
 8000dde:	682b      	ldr	r3, [r5, #0]
 8000de0:	0607      	lsls	r7, r0, #24
 8000de2:	f103 0104 	add.w	r1, r3, #4
 8000de6:	6029      	str	r1, [r5, #0]
 8000de8:	d501      	bpl.n	8000dee <_printf_i+0xbe>
 8000dea:	681e      	ldr	r6, [r3, #0]
 8000dec:	e003      	b.n	8000df6 <_printf_i+0xc6>
 8000dee:	0646      	lsls	r6, r0, #25
 8000df0:	d5fb      	bpl.n	8000dea <_printf_i+0xba>
 8000df2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000df6:	2e00      	cmp	r6, #0
 8000df8:	da03      	bge.n	8000e02 <_printf_i+0xd2>
 8000dfa:	232d      	movs	r3, #45	; 0x2d
 8000dfc:	4276      	negs	r6, r6
 8000dfe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e02:	485a      	ldr	r0, [pc, #360]	; (8000f6c <_printf_i+0x23c>)
 8000e04:	230a      	movs	r3, #10
 8000e06:	e012      	b.n	8000e2e <_printf_i+0xfe>
 8000e08:	682b      	ldr	r3, [r5, #0]
 8000e0a:	6820      	ldr	r0, [r4, #0]
 8000e0c:	1d19      	adds	r1, r3, #4
 8000e0e:	6029      	str	r1, [r5, #0]
 8000e10:	0605      	lsls	r5, r0, #24
 8000e12:	d501      	bpl.n	8000e18 <_printf_i+0xe8>
 8000e14:	681e      	ldr	r6, [r3, #0]
 8000e16:	e002      	b.n	8000e1e <_printf_i+0xee>
 8000e18:	0641      	lsls	r1, r0, #25
 8000e1a:	d5fb      	bpl.n	8000e14 <_printf_i+0xe4>
 8000e1c:	881e      	ldrh	r6, [r3, #0]
 8000e1e:	4853      	ldr	r0, [pc, #332]	; (8000f6c <_printf_i+0x23c>)
 8000e20:	2f6f      	cmp	r7, #111	; 0x6f
 8000e22:	bf0c      	ite	eq
 8000e24:	2308      	moveq	r3, #8
 8000e26:	230a      	movne	r3, #10
 8000e28:	2100      	movs	r1, #0
 8000e2a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e2e:	6865      	ldr	r5, [r4, #4]
 8000e30:	60a5      	str	r5, [r4, #8]
 8000e32:	2d00      	cmp	r5, #0
 8000e34:	bfa2      	ittt	ge
 8000e36:	6821      	ldrge	r1, [r4, #0]
 8000e38:	f021 0104 	bicge.w	r1, r1, #4
 8000e3c:	6021      	strge	r1, [r4, #0]
 8000e3e:	b90e      	cbnz	r6, 8000e44 <_printf_i+0x114>
 8000e40:	2d00      	cmp	r5, #0
 8000e42:	d04b      	beq.n	8000edc <_printf_i+0x1ac>
 8000e44:	4615      	mov	r5, r2
 8000e46:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e4a:	fb03 6711 	mls	r7, r3, r1, r6
 8000e4e:	5dc7      	ldrb	r7, [r0, r7]
 8000e50:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e54:	4637      	mov	r7, r6
 8000e56:	42bb      	cmp	r3, r7
 8000e58:	460e      	mov	r6, r1
 8000e5a:	d9f4      	bls.n	8000e46 <_printf_i+0x116>
 8000e5c:	2b08      	cmp	r3, #8
 8000e5e:	d10b      	bne.n	8000e78 <_printf_i+0x148>
 8000e60:	6823      	ldr	r3, [r4, #0]
 8000e62:	07de      	lsls	r6, r3, #31
 8000e64:	d508      	bpl.n	8000e78 <_printf_i+0x148>
 8000e66:	6923      	ldr	r3, [r4, #16]
 8000e68:	6861      	ldr	r1, [r4, #4]
 8000e6a:	4299      	cmp	r1, r3
 8000e6c:	bfde      	ittt	le
 8000e6e:	2330      	movle	r3, #48	; 0x30
 8000e70:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e74:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e78:	1b52      	subs	r2, r2, r5
 8000e7a:	6122      	str	r2, [r4, #16]
 8000e7c:	f8cd a000 	str.w	sl, [sp]
 8000e80:	464b      	mov	r3, r9
 8000e82:	aa03      	add	r2, sp, #12
 8000e84:	4621      	mov	r1, r4
 8000e86:	4640      	mov	r0, r8
 8000e88:	f7ff fee4 	bl	8000c54 <_printf_common>
 8000e8c:	3001      	adds	r0, #1
 8000e8e:	d14a      	bne.n	8000f26 <_printf_i+0x1f6>
 8000e90:	f04f 30ff 	mov.w	r0, #4294967295
 8000e94:	b004      	add	sp, #16
 8000e96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e9a:	6823      	ldr	r3, [r4, #0]
 8000e9c:	f043 0320 	orr.w	r3, r3, #32
 8000ea0:	6023      	str	r3, [r4, #0]
 8000ea2:	4833      	ldr	r0, [pc, #204]	; (8000f70 <_printf_i+0x240>)
 8000ea4:	2778      	movs	r7, #120	; 0x78
 8000ea6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000eaa:	6823      	ldr	r3, [r4, #0]
 8000eac:	6829      	ldr	r1, [r5, #0]
 8000eae:	061f      	lsls	r7, r3, #24
 8000eb0:	f851 6b04 	ldr.w	r6, [r1], #4
 8000eb4:	d402      	bmi.n	8000ebc <_printf_i+0x18c>
 8000eb6:	065f      	lsls	r7, r3, #25
 8000eb8:	bf48      	it	mi
 8000eba:	b2b6      	uxthmi	r6, r6
 8000ebc:	07df      	lsls	r7, r3, #31
 8000ebe:	bf48      	it	mi
 8000ec0:	f043 0320 	orrmi.w	r3, r3, #32
 8000ec4:	6029      	str	r1, [r5, #0]
 8000ec6:	bf48      	it	mi
 8000ec8:	6023      	strmi	r3, [r4, #0]
 8000eca:	b91e      	cbnz	r6, 8000ed4 <_printf_i+0x1a4>
 8000ecc:	6823      	ldr	r3, [r4, #0]
 8000ece:	f023 0320 	bic.w	r3, r3, #32
 8000ed2:	6023      	str	r3, [r4, #0]
 8000ed4:	2310      	movs	r3, #16
 8000ed6:	e7a7      	b.n	8000e28 <_printf_i+0xf8>
 8000ed8:	4824      	ldr	r0, [pc, #144]	; (8000f6c <_printf_i+0x23c>)
 8000eda:	e7e4      	b.n	8000ea6 <_printf_i+0x176>
 8000edc:	4615      	mov	r5, r2
 8000ede:	e7bd      	b.n	8000e5c <_printf_i+0x12c>
 8000ee0:	682b      	ldr	r3, [r5, #0]
 8000ee2:	6826      	ldr	r6, [r4, #0]
 8000ee4:	6961      	ldr	r1, [r4, #20]
 8000ee6:	1d18      	adds	r0, r3, #4
 8000ee8:	6028      	str	r0, [r5, #0]
 8000eea:	0635      	lsls	r5, r6, #24
 8000eec:	681b      	ldr	r3, [r3, #0]
 8000eee:	d501      	bpl.n	8000ef4 <_printf_i+0x1c4>
 8000ef0:	6019      	str	r1, [r3, #0]
 8000ef2:	e002      	b.n	8000efa <_printf_i+0x1ca>
 8000ef4:	0670      	lsls	r0, r6, #25
 8000ef6:	d5fb      	bpl.n	8000ef0 <_printf_i+0x1c0>
 8000ef8:	8019      	strh	r1, [r3, #0]
 8000efa:	2300      	movs	r3, #0
 8000efc:	6123      	str	r3, [r4, #16]
 8000efe:	4615      	mov	r5, r2
 8000f00:	e7bc      	b.n	8000e7c <_printf_i+0x14c>
 8000f02:	682b      	ldr	r3, [r5, #0]
 8000f04:	1d1a      	adds	r2, r3, #4
 8000f06:	602a      	str	r2, [r5, #0]
 8000f08:	681d      	ldr	r5, [r3, #0]
 8000f0a:	6862      	ldr	r2, [r4, #4]
 8000f0c:	2100      	movs	r1, #0
 8000f0e:	4628      	mov	r0, r5
 8000f10:	f7ff f95e 	bl	80001d0 <memchr>
 8000f14:	b108      	cbz	r0, 8000f1a <_printf_i+0x1ea>
 8000f16:	1b40      	subs	r0, r0, r5
 8000f18:	6060      	str	r0, [r4, #4]
 8000f1a:	6863      	ldr	r3, [r4, #4]
 8000f1c:	6123      	str	r3, [r4, #16]
 8000f1e:	2300      	movs	r3, #0
 8000f20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f24:	e7aa      	b.n	8000e7c <_printf_i+0x14c>
 8000f26:	6923      	ldr	r3, [r4, #16]
 8000f28:	462a      	mov	r2, r5
 8000f2a:	4649      	mov	r1, r9
 8000f2c:	4640      	mov	r0, r8
 8000f2e:	47d0      	blx	sl
 8000f30:	3001      	adds	r0, #1
 8000f32:	d0ad      	beq.n	8000e90 <_printf_i+0x160>
 8000f34:	6823      	ldr	r3, [r4, #0]
 8000f36:	079b      	lsls	r3, r3, #30
 8000f38:	d413      	bmi.n	8000f62 <_printf_i+0x232>
 8000f3a:	68e0      	ldr	r0, [r4, #12]
 8000f3c:	9b03      	ldr	r3, [sp, #12]
 8000f3e:	4298      	cmp	r0, r3
 8000f40:	bfb8      	it	lt
 8000f42:	4618      	movlt	r0, r3
 8000f44:	e7a6      	b.n	8000e94 <_printf_i+0x164>
 8000f46:	2301      	movs	r3, #1
 8000f48:	4632      	mov	r2, r6
 8000f4a:	4649      	mov	r1, r9
 8000f4c:	4640      	mov	r0, r8
 8000f4e:	47d0      	blx	sl
 8000f50:	3001      	adds	r0, #1
 8000f52:	d09d      	beq.n	8000e90 <_printf_i+0x160>
 8000f54:	3501      	adds	r5, #1
 8000f56:	68e3      	ldr	r3, [r4, #12]
 8000f58:	9903      	ldr	r1, [sp, #12]
 8000f5a:	1a5b      	subs	r3, r3, r1
 8000f5c:	42ab      	cmp	r3, r5
 8000f5e:	dcf2      	bgt.n	8000f46 <_printf_i+0x216>
 8000f60:	e7eb      	b.n	8000f3a <_printf_i+0x20a>
 8000f62:	2500      	movs	r5, #0
 8000f64:	f104 0619 	add.w	r6, r4, #25
 8000f68:	e7f5      	b.n	8000f56 <_printf_i+0x226>
 8000f6a:	bf00      	nop
 8000f6c:	08001406 	.word	0x08001406
 8000f70:	08001417 	.word	0x08001417

08000f74 <__sflush_r>:
 8000f74:	898a      	ldrh	r2, [r1, #12]
 8000f76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f78:	4605      	mov	r5, r0
 8000f7a:	0710      	lsls	r0, r2, #28
 8000f7c:	460c      	mov	r4, r1
 8000f7e:	d457      	bmi.n	8001030 <__sflush_r+0xbc>
 8000f80:	684b      	ldr	r3, [r1, #4]
 8000f82:	2b00      	cmp	r3, #0
 8000f84:	dc04      	bgt.n	8000f90 <__sflush_r+0x1c>
 8000f86:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	dc01      	bgt.n	8000f90 <__sflush_r+0x1c>
 8000f8c:	2000      	movs	r0, #0
 8000f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f90:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f92:	2e00      	cmp	r6, #0
 8000f94:	d0fa      	beq.n	8000f8c <__sflush_r+0x18>
 8000f96:	2300      	movs	r3, #0
 8000f98:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f9c:	682f      	ldr	r7, [r5, #0]
 8000f9e:	6a21      	ldr	r1, [r4, #32]
 8000fa0:	602b      	str	r3, [r5, #0]
 8000fa2:	d032      	beq.n	800100a <__sflush_r+0x96>
 8000fa4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fa6:	89a3      	ldrh	r3, [r4, #12]
 8000fa8:	075a      	lsls	r2, r3, #29
 8000faa:	d505      	bpl.n	8000fb8 <__sflush_r+0x44>
 8000fac:	6863      	ldr	r3, [r4, #4]
 8000fae:	1ac0      	subs	r0, r0, r3
 8000fb0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fb2:	b10b      	cbz	r3, 8000fb8 <__sflush_r+0x44>
 8000fb4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fb6:	1ac0      	subs	r0, r0, r3
 8000fb8:	2300      	movs	r3, #0
 8000fba:	4602      	mov	r2, r0
 8000fbc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fbe:	6a21      	ldr	r1, [r4, #32]
 8000fc0:	4628      	mov	r0, r5
 8000fc2:	47b0      	blx	r6
 8000fc4:	1c43      	adds	r3, r0, #1
 8000fc6:	89a3      	ldrh	r3, [r4, #12]
 8000fc8:	d106      	bne.n	8000fd8 <__sflush_r+0x64>
 8000fca:	6829      	ldr	r1, [r5, #0]
 8000fcc:	291d      	cmp	r1, #29
 8000fce:	d82b      	bhi.n	8001028 <__sflush_r+0xb4>
 8000fd0:	4a28      	ldr	r2, [pc, #160]	; (8001074 <__sflush_r+0x100>)
 8000fd2:	410a      	asrs	r2, r1
 8000fd4:	07d6      	lsls	r6, r2, #31
 8000fd6:	d427      	bmi.n	8001028 <__sflush_r+0xb4>
 8000fd8:	2200      	movs	r2, #0
 8000fda:	6062      	str	r2, [r4, #4]
 8000fdc:	04d9      	lsls	r1, r3, #19
 8000fde:	6922      	ldr	r2, [r4, #16]
 8000fe0:	6022      	str	r2, [r4, #0]
 8000fe2:	d504      	bpl.n	8000fee <__sflush_r+0x7a>
 8000fe4:	1c42      	adds	r2, r0, #1
 8000fe6:	d101      	bne.n	8000fec <__sflush_r+0x78>
 8000fe8:	682b      	ldr	r3, [r5, #0]
 8000fea:	b903      	cbnz	r3, 8000fee <__sflush_r+0x7a>
 8000fec:	6560      	str	r0, [r4, #84]	; 0x54
 8000fee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ff0:	602f      	str	r7, [r5, #0]
 8000ff2:	2900      	cmp	r1, #0
 8000ff4:	d0ca      	beq.n	8000f8c <__sflush_r+0x18>
 8000ff6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ffa:	4299      	cmp	r1, r3
 8000ffc:	d002      	beq.n	8001004 <__sflush_r+0x90>
 8000ffe:	4628      	mov	r0, r5
 8001000:	f7ff fbf0 	bl	80007e4 <_free_r>
 8001004:	2000      	movs	r0, #0
 8001006:	6360      	str	r0, [r4, #52]	; 0x34
 8001008:	e7c1      	b.n	8000f8e <__sflush_r+0x1a>
 800100a:	2301      	movs	r3, #1
 800100c:	4628      	mov	r0, r5
 800100e:	47b0      	blx	r6
 8001010:	1c41      	adds	r1, r0, #1
 8001012:	d1c8      	bne.n	8000fa6 <__sflush_r+0x32>
 8001014:	682b      	ldr	r3, [r5, #0]
 8001016:	2b00      	cmp	r3, #0
 8001018:	d0c5      	beq.n	8000fa6 <__sflush_r+0x32>
 800101a:	2b1d      	cmp	r3, #29
 800101c:	d001      	beq.n	8001022 <__sflush_r+0xae>
 800101e:	2b16      	cmp	r3, #22
 8001020:	d101      	bne.n	8001026 <__sflush_r+0xb2>
 8001022:	602f      	str	r7, [r5, #0]
 8001024:	e7b2      	b.n	8000f8c <__sflush_r+0x18>
 8001026:	89a3      	ldrh	r3, [r4, #12]
 8001028:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800102c:	81a3      	strh	r3, [r4, #12]
 800102e:	e7ae      	b.n	8000f8e <__sflush_r+0x1a>
 8001030:	690f      	ldr	r7, [r1, #16]
 8001032:	2f00      	cmp	r7, #0
 8001034:	d0aa      	beq.n	8000f8c <__sflush_r+0x18>
 8001036:	0793      	lsls	r3, r2, #30
 8001038:	680e      	ldr	r6, [r1, #0]
 800103a:	bf08      	it	eq
 800103c:	694b      	ldreq	r3, [r1, #20]
 800103e:	600f      	str	r7, [r1, #0]
 8001040:	bf18      	it	ne
 8001042:	2300      	movne	r3, #0
 8001044:	1bf6      	subs	r6, r6, r7
 8001046:	608b      	str	r3, [r1, #8]
 8001048:	2e00      	cmp	r6, #0
 800104a:	dd9f      	ble.n	8000f8c <__sflush_r+0x18>
 800104c:	6a21      	ldr	r1, [r4, #32]
 800104e:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001052:	4633      	mov	r3, r6
 8001054:	463a      	mov	r2, r7
 8001056:	4628      	mov	r0, r5
 8001058:	47e0      	blx	ip
 800105a:	2800      	cmp	r0, #0
 800105c:	dc06      	bgt.n	800106c <__sflush_r+0xf8>
 800105e:	89a3      	ldrh	r3, [r4, #12]
 8001060:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001064:	81a3      	strh	r3, [r4, #12]
 8001066:	f04f 30ff 	mov.w	r0, #4294967295
 800106a:	e790      	b.n	8000f8e <__sflush_r+0x1a>
 800106c:	4407      	add	r7, r0
 800106e:	1a36      	subs	r6, r6, r0
 8001070:	e7ea      	b.n	8001048 <__sflush_r+0xd4>
 8001072:	bf00      	nop
 8001074:	dfbffffe 	.word	0xdfbffffe

08001078 <_fflush_r>:
 8001078:	b538      	push	{r3, r4, r5, lr}
 800107a:	690b      	ldr	r3, [r1, #16]
 800107c:	4605      	mov	r5, r0
 800107e:	460c      	mov	r4, r1
 8001080:	b913      	cbnz	r3, 8001088 <_fflush_r+0x10>
 8001082:	2500      	movs	r5, #0
 8001084:	4628      	mov	r0, r5
 8001086:	bd38      	pop	{r3, r4, r5, pc}
 8001088:	b118      	cbz	r0, 8001092 <_fflush_r+0x1a>
 800108a:	6a03      	ldr	r3, [r0, #32]
 800108c:	b90b      	cbnz	r3, 8001092 <_fflush_r+0x1a>
 800108e:	f7ff faa1 	bl	80005d4 <__sinit>
 8001092:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001096:	2b00      	cmp	r3, #0
 8001098:	d0f3      	beq.n	8001082 <_fflush_r+0xa>
 800109a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800109c:	07d0      	lsls	r0, r2, #31
 800109e:	d404      	bmi.n	80010aa <_fflush_r+0x32>
 80010a0:	0599      	lsls	r1, r3, #22
 80010a2:	d402      	bmi.n	80010aa <_fflush_r+0x32>
 80010a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010a6:	f7ff fb9a 	bl	80007de <__retarget_lock_acquire_recursive>
 80010aa:	4628      	mov	r0, r5
 80010ac:	4621      	mov	r1, r4
 80010ae:	f7ff ff61 	bl	8000f74 <__sflush_r>
 80010b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010b4:	07da      	lsls	r2, r3, #31
 80010b6:	4605      	mov	r5, r0
 80010b8:	d4e4      	bmi.n	8001084 <_fflush_r+0xc>
 80010ba:	89a3      	ldrh	r3, [r4, #12]
 80010bc:	059b      	lsls	r3, r3, #22
 80010be:	d4e1      	bmi.n	8001084 <_fflush_r+0xc>
 80010c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010c2:	f7ff fb8d 	bl	80007e0 <__retarget_lock_release_recursive>
 80010c6:	e7dd      	b.n	8001084 <_fflush_r+0xc>

080010c8 <__swbuf_r>:
 80010c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ca:	460e      	mov	r6, r1
 80010cc:	4614      	mov	r4, r2
 80010ce:	4605      	mov	r5, r0
 80010d0:	b118      	cbz	r0, 80010da <__swbuf_r+0x12>
 80010d2:	6a03      	ldr	r3, [r0, #32]
 80010d4:	b90b      	cbnz	r3, 80010da <__swbuf_r+0x12>
 80010d6:	f7ff fa7d 	bl	80005d4 <__sinit>
 80010da:	69a3      	ldr	r3, [r4, #24]
 80010dc:	60a3      	str	r3, [r4, #8]
 80010de:	89a3      	ldrh	r3, [r4, #12]
 80010e0:	071a      	lsls	r2, r3, #28
 80010e2:	d525      	bpl.n	8001130 <__swbuf_r+0x68>
 80010e4:	6923      	ldr	r3, [r4, #16]
 80010e6:	b31b      	cbz	r3, 8001130 <__swbuf_r+0x68>
 80010e8:	6823      	ldr	r3, [r4, #0]
 80010ea:	6922      	ldr	r2, [r4, #16]
 80010ec:	1a98      	subs	r0, r3, r2
 80010ee:	6963      	ldr	r3, [r4, #20]
 80010f0:	b2f6      	uxtb	r6, r6
 80010f2:	4283      	cmp	r3, r0
 80010f4:	4637      	mov	r7, r6
 80010f6:	dc04      	bgt.n	8001102 <__swbuf_r+0x3a>
 80010f8:	4621      	mov	r1, r4
 80010fa:	4628      	mov	r0, r5
 80010fc:	f7ff ffbc 	bl	8001078 <_fflush_r>
 8001100:	b9e0      	cbnz	r0, 800113c <__swbuf_r+0x74>
 8001102:	68a3      	ldr	r3, [r4, #8]
 8001104:	3b01      	subs	r3, #1
 8001106:	60a3      	str	r3, [r4, #8]
 8001108:	6823      	ldr	r3, [r4, #0]
 800110a:	1c5a      	adds	r2, r3, #1
 800110c:	6022      	str	r2, [r4, #0]
 800110e:	701e      	strb	r6, [r3, #0]
 8001110:	6962      	ldr	r2, [r4, #20]
 8001112:	1c43      	adds	r3, r0, #1
 8001114:	429a      	cmp	r2, r3
 8001116:	d004      	beq.n	8001122 <__swbuf_r+0x5a>
 8001118:	89a3      	ldrh	r3, [r4, #12]
 800111a:	07db      	lsls	r3, r3, #31
 800111c:	d506      	bpl.n	800112c <__swbuf_r+0x64>
 800111e:	2e0a      	cmp	r6, #10
 8001120:	d104      	bne.n	800112c <__swbuf_r+0x64>
 8001122:	4621      	mov	r1, r4
 8001124:	4628      	mov	r0, r5
 8001126:	f7ff ffa7 	bl	8001078 <_fflush_r>
 800112a:	b938      	cbnz	r0, 800113c <__swbuf_r+0x74>
 800112c:	4638      	mov	r0, r7
 800112e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001130:	4621      	mov	r1, r4
 8001132:	4628      	mov	r0, r5
 8001134:	f000 f806 	bl	8001144 <__swsetup_r>
 8001138:	2800      	cmp	r0, #0
 800113a:	d0d5      	beq.n	80010e8 <__swbuf_r+0x20>
 800113c:	f04f 37ff 	mov.w	r7, #4294967295
 8001140:	e7f4      	b.n	800112c <__swbuf_r+0x64>
	...

08001144 <__swsetup_r>:
 8001144:	b538      	push	{r3, r4, r5, lr}
 8001146:	4b2a      	ldr	r3, [pc, #168]	; (80011f0 <__swsetup_r+0xac>)
 8001148:	4605      	mov	r5, r0
 800114a:	6818      	ldr	r0, [r3, #0]
 800114c:	460c      	mov	r4, r1
 800114e:	b118      	cbz	r0, 8001158 <__swsetup_r+0x14>
 8001150:	6a03      	ldr	r3, [r0, #32]
 8001152:	b90b      	cbnz	r3, 8001158 <__swsetup_r+0x14>
 8001154:	f7ff fa3e 	bl	80005d4 <__sinit>
 8001158:	89a3      	ldrh	r3, [r4, #12]
 800115a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800115e:	0718      	lsls	r0, r3, #28
 8001160:	d422      	bmi.n	80011a8 <__swsetup_r+0x64>
 8001162:	06d9      	lsls	r1, r3, #27
 8001164:	d407      	bmi.n	8001176 <__swsetup_r+0x32>
 8001166:	2309      	movs	r3, #9
 8001168:	602b      	str	r3, [r5, #0]
 800116a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800116e:	81a3      	strh	r3, [r4, #12]
 8001170:	f04f 30ff 	mov.w	r0, #4294967295
 8001174:	e034      	b.n	80011e0 <__swsetup_r+0x9c>
 8001176:	0758      	lsls	r0, r3, #29
 8001178:	d512      	bpl.n	80011a0 <__swsetup_r+0x5c>
 800117a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800117c:	b141      	cbz	r1, 8001190 <__swsetup_r+0x4c>
 800117e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001182:	4299      	cmp	r1, r3
 8001184:	d002      	beq.n	800118c <__swsetup_r+0x48>
 8001186:	4628      	mov	r0, r5
 8001188:	f7ff fb2c 	bl	80007e4 <_free_r>
 800118c:	2300      	movs	r3, #0
 800118e:	6363      	str	r3, [r4, #52]	; 0x34
 8001190:	89a3      	ldrh	r3, [r4, #12]
 8001192:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001196:	81a3      	strh	r3, [r4, #12]
 8001198:	2300      	movs	r3, #0
 800119a:	6063      	str	r3, [r4, #4]
 800119c:	6923      	ldr	r3, [r4, #16]
 800119e:	6023      	str	r3, [r4, #0]
 80011a0:	89a3      	ldrh	r3, [r4, #12]
 80011a2:	f043 0308 	orr.w	r3, r3, #8
 80011a6:	81a3      	strh	r3, [r4, #12]
 80011a8:	6923      	ldr	r3, [r4, #16]
 80011aa:	b94b      	cbnz	r3, 80011c0 <__swsetup_r+0x7c>
 80011ac:	89a3      	ldrh	r3, [r4, #12]
 80011ae:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011b2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011b6:	d003      	beq.n	80011c0 <__swsetup_r+0x7c>
 80011b8:	4621      	mov	r1, r4
 80011ba:	4628      	mov	r0, r5
 80011bc:	f000 f850 	bl	8001260 <__smakebuf_r>
 80011c0:	89a0      	ldrh	r0, [r4, #12]
 80011c2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011c6:	f010 0301 	ands.w	r3, r0, #1
 80011ca:	d00a      	beq.n	80011e2 <__swsetup_r+0x9e>
 80011cc:	2300      	movs	r3, #0
 80011ce:	60a3      	str	r3, [r4, #8]
 80011d0:	6963      	ldr	r3, [r4, #20]
 80011d2:	425b      	negs	r3, r3
 80011d4:	61a3      	str	r3, [r4, #24]
 80011d6:	6923      	ldr	r3, [r4, #16]
 80011d8:	b943      	cbnz	r3, 80011ec <__swsetup_r+0xa8>
 80011da:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011de:	d1c4      	bne.n	800116a <__swsetup_r+0x26>
 80011e0:	bd38      	pop	{r3, r4, r5, pc}
 80011e2:	0781      	lsls	r1, r0, #30
 80011e4:	bf58      	it	pl
 80011e6:	6963      	ldrpl	r3, [r4, #20]
 80011e8:	60a3      	str	r3, [r4, #8]
 80011ea:	e7f4      	b.n	80011d6 <__swsetup_r+0x92>
 80011ec:	2000      	movs	r0, #0
 80011ee:	e7f7      	b.n	80011e0 <__swsetup_r+0x9c>
 80011f0:	20000058 	.word	0x20000058

080011f4 <_sbrk_r>:
 80011f4:	b538      	push	{r3, r4, r5, lr}
 80011f6:	4d06      	ldr	r5, [pc, #24]	; (8001210 <_sbrk_r+0x1c>)
 80011f8:	2300      	movs	r3, #0
 80011fa:	4604      	mov	r4, r0
 80011fc:	4608      	mov	r0, r1
 80011fe:	602b      	str	r3, [r5, #0]
 8001200:	f7ff f8fc 	bl	80003fc <_sbrk>
 8001204:	1c43      	adds	r3, r0, #1
 8001206:	d102      	bne.n	800120e <_sbrk_r+0x1a>
 8001208:	682b      	ldr	r3, [r5, #0]
 800120a:	b103      	cbz	r3, 800120e <_sbrk_r+0x1a>
 800120c:	6023      	str	r3, [r4, #0]
 800120e:	bd38      	pop	{r3, r4, r5, pc}
 8001210:	200001b8 	.word	0x200001b8

08001214 <__swhatbuf_r>:
 8001214:	b570      	push	{r4, r5, r6, lr}
 8001216:	460c      	mov	r4, r1
 8001218:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800121c:	2900      	cmp	r1, #0
 800121e:	b096      	sub	sp, #88	; 0x58
 8001220:	4615      	mov	r5, r2
 8001222:	461e      	mov	r6, r3
 8001224:	da0d      	bge.n	8001242 <__swhatbuf_r+0x2e>
 8001226:	89a3      	ldrh	r3, [r4, #12]
 8001228:	f013 0f80 	tst.w	r3, #128	; 0x80
 800122c:	f04f 0100 	mov.w	r1, #0
 8001230:	bf0c      	ite	eq
 8001232:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001236:	2340      	movne	r3, #64	; 0x40
 8001238:	2000      	movs	r0, #0
 800123a:	6031      	str	r1, [r6, #0]
 800123c:	602b      	str	r3, [r5, #0]
 800123e:	b016      	add	sp, #88	; 0x58
 8001240:	bd70      	pop	{r4, r5, r6, pc}
 8001242:	466a      	mov	r2, sp
 8001244:	f000 f848 	bl	80012d8 <_fstat_r>
 8001248:	2800      	cmp	r0, #0
 800124a:	dbec      	blt.n	8001226 <__swhatbuf_r+0x12>
 800124c:	9901      	ldr	r1, [sp, #4]
 800124e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001252:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001256:	4259      	negs	r1, r3
 8001258:	4159      	adcs	r1, r3
 800125a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800125e:	e7eb      	b.n	8001238 <__swhatbuf_r+0x24>

08001260 <__smakebuf_r>:
 8001260:	898b      	ldrh	r3, [r1, #12]
 8001262:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001264:	079d      	lsls	r5, r3, #30
 8001266:	4606      	mov	r6, r0
 8001268:	460c      	mov	r4, r1
 800126a:	d507      	bpl.n	800127c <__smakebuf_r+0x1c>
 800126c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001270:	6023      	str	r3, [r4, #0]
 8001272:	6123      	str	r3, [r4, #16]
 8001274:	2301      	movs	r3, #1
 8001276:	6163      	str	r3, [r4, #20]
 8001278:	b002      	add	sp, #8
 800127a:	bd70      	pop	{r4, r5, r6, pc}
 800127c:	ab01      	add	r3, sp, #4
 800127e:	466a      	mov	r2, sp
 8001280:	f7ff ffc8 	bl	8001214 <__swhatbuf_r>
 8001284:	9900      	ldr	r1, [sp, #0]
 8001286:	4605      	mov	r5, r0
 8001288:	4630      	mov	r0, r6
 800128a:	f7ff fb15 	bl	80008b8 <_malloc_r>
 800128e:	b948      	cbnz	r0, 80012a4 <__smakebuf_r+0x44>
 8001290:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001294:	059a      	lsls	r2, r3, #22
 8001296:	d4ef      	bmi.n	8001278 <__smakebuf_r+0x18>
 8001298:	f023 0303 	bic.w	r3, r3, #3
 800129c:	f043 0302 	orr.w	r3, r3, #2
 80012a0:	81a3      	strh	r3, [r4, #12]
 80012a2:	e7e3      	b.n	800126c <__smakebuf_r+0xc>
 80012a4:	89a3      	ldrh	r3, [r4, #12]
 80012a6:	6020      	str	r0, [r4, #0]
 80012a8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012ac:	81a3      	strh	r3, [r4, #12]
 80012ae:	9b00      	ldr	r3, [sp, #0]
 80012b0:	6163      	str	r3, [r4, #20]
 80012b2:	9b01      	ldr	r3, [sp, #4]
 80012b4:	6120      	str	r0, [r4, #16]
 80012b6:	b15b      	cbz	r3, 80012d0 <__smakebuf_r+0x70>
 80012b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012bc:	4630      	mov	r0, r6
 80012be:	f000 f81d 	bl	80012fc <_isatty_r>
 80012c2:	b128      	cbz	r0, 80012d0 <__smakebuf_r+0x70>
 80012c4:	89a3      	ldrh	r3, [r4, #12]
 80012c6:	f023 0303 	bic.w	r3, r3, #3
 80012ca:	f043 0301 	orr.w	r3, r3, #1
 80012ce:	81a3      	strh	r3, [r4, #12]
 80012d0:	89a3      	ldrh	r3, [r4, #12]
 80012d2:	431d      	orrs	r5, r3
 80012d4:	81a5      	strh	r5, [r4, #12]
 80012d6:	e7cf      	b.n	8001278 <__smakebuf_r+0x18>

080012d8 <_fstat_r>:
 80012d8:	b538      	push	{r3, r4, r5, lr}
 80012da:	4d07      	ldr	r5, [pc, #28]	; (80012f8 <_fstat_r+0x20>)
 80012dc:	2300      	movs	r3, #0
 80012de:	4604      	mov	r4, r0
 80012e0:	4608      	mov	r0, r1
 80012e2:	4611      	mov	r1, r2
 80012e4:	602b      	str	r3, [r5, #0]
 80012e6:	f7ff f863 	bl	80003b0 <_fstat>
 80012ea:	1c43      	adds	r3, r0, #1
 80012ec:	d102      	bne.n	80012f4 <_fstat_r+0x1c>
 80012ee:	682b      	ldr	r3, [r5, #0]
 80012f0:	b103      	cbz	r3, 80012f4 <_fstat_r+0x1c>
 80012f2:	6023      	str	r3, [r4, #0]
 80012f4:	bd38      	pop	{r3, r4, r5, pc}
 80012f6:	bf00      	nop
 80012f8:	200001b8 	.word	0x200001b8

080012fc <_isatty_r>:
 80012fc:	b538      	push	{r3, r4, r5, lr}
 80012fe:	4d06      	ldr	r5, [pc, #24]	; (8001318 <_isatty_r+0x1c>)
 8001300:	2300      	movs	r3, #0
 8001302:	4604      	mov	r4, r0
 8001304:	4608      	mov	r0, r1
 8001306:	602b      	str	r3, [r5, #0]
 8001308:	f7ff f861 	bl	80003ce <_isatty>
 800130c:	1c43      	adds	r3, r0, #1
 800130e:	d102      	bne.n	8001316 <_isatty_r+0x1a>
 8001310:	682b      	ldr	r3, [r5, #0]
 8001312:	b103      	cbz	r3, 8001316 <_isatty_r+0x1a>
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	bd38      	pop	{r3, r4, r5, pc}
 8001318:	200001b8 	.word	0x200001b8

0800131c <_init>:
 800131c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800131e:	bf00      	nop
 8001320:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001322:	bc08      	pop	{r3}
 8001324:	469e      	mov	lr, r3
 8001326:	4770      	bx	lr

08001328 <_fini>:
 8001328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800132a:	bf00      	nop
 800132c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800132e:	bc08      	pop	{r3}
 8001330:	469e      	mov	lr, r3
 8001332:	4770      	bx	lr
